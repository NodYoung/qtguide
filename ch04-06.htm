<!DOCTYPE html>
<html>
  <head>
    <meta content="text/html; charset=UTF-8" http-equiv="content-type">
    <title>ch04-06</title>
    <link href="css/style.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="thumbnailviewer.css" type="text/css">
    <script src="thumbnailviewer.js" type="text/javascript">

/***********************************************
* Image Thumbnail Viewer Script- © Dynamic Drive (www.dynamicdrive.com)
* This notice must stay intact for legal use.
* Visit http://www.dynamicdrive.com/ for full source code
***********************************************/

</script> </head>
  <body>
    <div class="os1"> 4.6 扩展阅读：moc_*.cpp代码 </div>
    <br>
    接着上一节的内容，本节讲解元对象系统综合示例在构建过程中生成的 moc_*.cpp代码 ，深入学习元对象系统（The Meta-Object
    System，下文简称 MOS）内部工作原理。总共分为 7 个小节来讲解，4.6.1 讲解类声明里的 Q_OBJECT 宏；4.6.2 到 4.6.4
    节对 moc_widget.cpp 里的代码进行分块讲解；4.6.5 节讲解 connect 函数工作原理，4.6.6 节讲解上一节自动关联函数
    QMetaObject::connectSlotsByName() 的原理；最后 4.6.7 节我们从 Qt
    核心源码抽取一些函数代码，来讲解从信号触发到槽函数被调用的整个过程。<br>
    <br>
    本节内容比较复杂，如果是 Qt 初学者可以大致翻一下，不要求学会，可以等将来想了解 Qt 技术内幕时再学。<br>
    <br>
    对于 npcomplete 综合示例，构建过程产生了 moc_showchanges.cpp 和 moc_widget.cpp 两个 moc
    代码文件，位于 <br>
    D:\QtProjects\ch04\build-npcomplete-Desktop_Qt_5_4_0_MinGW_32bit-Debug\debug
    <br>
    文件夹里面。本节以窗体类的 moc_widget.cpp 为主来讲解元对象系统原理，moc_showchanges.cpp
    里的代码结构类似，并且简单一些。对于 moc_widget.cpp 和 moc_showchanges.cpp
    里的完整代码，大家打开这两个文件即可看到，下面我们按照代码分块来讲解，不集中贴它们的代码了。<br>
    <br>
    <div class="os2"> 4.6.1 MOS原理之一：Q_OBJECT 宏 </div>
    <br>
    本小节主要是讲解头文件如 widget.h、showchanges.h 里面声明的宏
    Q_OBJECT，这个宏已经遇到多次了，这回我们来揭开它的面纱。前面章节提到使用元对象系统不仅需要从 QObject 类派生，还需要在类声明开头添加
    Q_OBJECT 宏，那么这个宏到底是什么呢？<br>
    我们打开 widget.h 文件，然后找到 Q_OBJECT 宏，右击这个宏，右键菜单里点击“Follow Symbol Under Cursor”，如
    下图所示：<br>
    <center><img src="images/ch04/ch04-06-01.png" alt="follow" width="800"></center>
    QtCreator 会自动打开 Q_OBJECT 宏所在文件
    C:\Qt\Qt5.4.0\5.4\mingw491_32\include\QtCore\qobjectdefs.h ，并跳转到该宏定义位置第 142
    行。 Q_OBJECT 宏定义为：<br>
    <div class="code"><span style=" color:#008000;">/*</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#008000;">qmake</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#008000;">ignore</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#008000;">Q_OBJECT</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#008000;">*/</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000080;">#define</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">Q_OBJECT</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#c0c0c0;">\</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#808000;">public</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#c0c0c0;">\</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000080;">Q_OBJECT_CHECK</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#c0c0c0;">\</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">static</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">const</span><span
style=" color:#c0c0c0;"> </span>QMetaObject<span style=" color:#c0c0c0;"> </span>staticMetaObject<span
style=" color:#000000;">;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#c0c0c0;">\</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">virtual</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">const</span><span
style=" color:#c0c0c0;"> </span>QMetaObject<span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">*</span>metaObject<span style=" color:#000000;">()</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">const</span><span
style=" color:#000000;">;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#c0c0c0;">\</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">virtual</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">*</span>qt_metacast<span style=" color:#000000;">(</span><span
style=" color:#808000;">const</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">char</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*);</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#c0c0c0;">\</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000080;">QT_TR_FUNCTIONS</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#c0c0c0;">\</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">virtual</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span style=" color:#c0c0c0;"> </span>qt_metacall<span
style=" color:#000000;">(</span>QMetaObject<span style=" color:#000000;">::</span>Call<span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">**);</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#c0c0c0;">\</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#808000;">private</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#c0c0c0;">\</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000080;">Q_DECL_HIDDEN_STATIC_METACALL</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">static</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span>qt_static_metacall<span
style=" color:#000000;">(</span>QObject<span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">*,</span><span style=" color:#c0c0c0;"> </span>QMetaObject<span
style=" color:#000000;">::</span>Call<span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">**);</span><span style=" color:#c0c0c0;"> </span><span style=" color:#c0c0c0;">\</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">struct</span><span
style=" color:#c0c0c0;"> </span>QPrivateSignal<span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">{};</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
    </div>
    上面行尾的反斜杠是行拼接的意思，上面 11 行代码拼接后其实只有一行宏定义。下面逐行来看看它的代码：<br>
    <div class="code">Q_OBJECT_CHECK \</div>
    Q_OBJECT_CHECK 也是一个宏，它的用处是在编译时检查当前类从 QObject 继承树上的所有基类是不是都有 Q_OBJECT
    宏，如果有基类没定义 Q_OBJECT 宏，那么这个宏在编译时会报错。<br>
    <div class="code">static const QMetaObject staticMetaObject; \</div>
    这句定义了关键的静态元对象
    staticMetaObject，这个对象会保存该类的元对象系统信息。使用静态元对象，说明该类的所有实例都会共享这个静态元对象，而不需要重复占用内存。<br>
    <div class="code">virtual const QMetaObject *metaObject() const; \</div>
    这个虚函数是获取当前类对象里面内部元对象的公开接口，通常情况下都会返回类的静态元对象
    staticMetaObject，如果当前类的对象内部使用了动态元对象（仅 QML 程序才有），才会出现返回非静态元对象。<br>
    <div class="code">virtual void *qt_metacast(const char *); \</div>
    qt_metacast 是程序运行时的对象指针转换，它可以将派生类对象的指针安全地转为基类对象指针，这是 Qt
    不依赖编译器特性，自己实现的运行时类型转换。qt_metacast 参数是基类名称字符串，返回值是转换后的基类对象指针，如果转换不成功，返回 NULL。<br>
    <div class="code">QT_TR_FUNCTIONS \</div>
    这个宏声明用于定义翻译的 tr() 和 trUtf8() 两个内联函数，其实本质都是调用 staticMetaObject.tr() 函数。&nbsp;
    <div class="code">virtual int qt_metacall(QMetaObject::Call, int, void **);
      \</div>
    qt_metacall 是非常重要的虚函数，在信号到槽的执行过程中，qt_metacall 就是负责槽函数的调用，属性系统的读写等也是靠
    qt_metacall 实现。后面专门会讲它的源码。
    <div class="code">Q_DECL_HIDDEN_STATIC_METACALL static void
      qt_static_metacall(QObject *, QMetaObject::Call, int, void **); \</div>
    这一个私有的静态函数，Q_DECL_HIDDEN_STATIC_METACALL 是个空宏，没啥用，就是提醒程序员这是一个隐蔽的私有静态函数。前面的
    qt_metacall 会调用该静态私有函数实现槽函数调用，真正调用槽函数的就是 qt_static_metacall。<br>
    <div class="code">struct QPrivateSignal {};</div>
    QPrivateSignal 是一个私有的空结构体，对函数功能来说没啥用，就是在信号被触发时，挂在参数里提醒程序员这是一个私有信号的触发。<br>
    <br>
    上面有函数的声明，就有函数的实体代码，还有静态数据的赋值等代码，这些函数实体代码都由 moc 工具自动生成，保存在 moc_*.cpp
    里面，也就是当前类支持元对象系统的关键内部代码。下面三个小节我们来分块解析 moc_*.cpp。<br>
    <br>
    <div class="os2"> 4.6.2 MOS原理之二：信号是什么 </div>
    <br>
    我们在 widget.h、showchanges.h 里声明信号和槽函数时用到了关键字 signals 和 slots，这两个关键字也可以用上面右键菜单
    “Follow Symbol Under Cursor”方法找到它们的定义，这两个关键字也是宏：<br>
    <div class="code">#&nbsp;&nbsp; ifndef QT_NO_SIGNALS_SLOTS_KEYWORDS<br>
      #&nbsp;&nbsp;&nbsp;&nbsp; define slots<br>
      #&nbsp;&nbsp;&nbsp;&nbsp; define signals public<br>
      #&nbsp;&nbsp; endif</div>
    上面宏定义是说，如果没有定义不能使用 Qt 信号和槽关键字的情况下，启用 slots 和 signals 关键字定义，slots
    根本就是空宏，什么都没有。signals 就是 C++ 关键字 public。<br>
    注意头文件里的 slots 和 signals 有两种意义，第一种是 moc 工具扫描这些宏，根据这些宏来生成 moc_*.cpp 里的代码；<br>
    第二种意义才是 g++、VC 等编译器来编译标准 C++ 代码，在编译时，slots 没有用，signals 就是 public。<br>
    头文件里的关键字 slots 和 signals 是必须要的，因为 moc 工具需要扫描这些关键字来生成对应的元对象系统代码。<br>
    <br>
    在极罕见情况下，可能某些编译器或相关库占用了关键字 slots 和 signals，那么 Qt 可以使用两个等价的宏来声明信号和槽：<br>
    <div class="code"># define Q_SLOTS<br>
      # define Q_SIGNALS public</div>
    无论有没有关键字 slots 和 signals，Q_SLOTS 和 Q_SIGNALS 这两个宏都是一直生效的，所以 Qt 源码里是优先使用
    Q_SLOTS 和 Q_SIGNALS 宏的。对程序员来说，关键字 slots 和 signals 比 Q_SLOTS 和 Q_SIGNALS
    宏字母少，写起来更方便，可以放心用关键字形式。<br>
    <br>
    我们现在知道 signals 就是 public，那么 widget.h 里面声明的信号
    nickNameChanged、countChanged、valueChanged 到底是什么呢？<br>
    对于标准 C++ 来说，信号声明就是一个函数声明，虽然对于程序员来说，没有编写信号的函数实体，信号看起来像是个空壳，但是信号真的就是函数！<br>
    我们在 moc_widget.cpp 末尾能找到三个信号函数的实体代码，是由 moc 工具自动生成的：<br>
    <div class="code"><span style=" color:#008000;">//</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#008000;">SIGNAL</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#008000;">0</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">Widget</span><span
style=" color:#000000;">::</span><span style=" color:#000000;">nickNameChanged</span><span
style=" color:#000000;">(</span><span style=" color:#808000;">const</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QString</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&amp;</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_t1</span><span style=" color:#000000;">)</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">void</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#000000;">_a</span><span
style=" color:#000000;">[]</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">Q_NULLPTR</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">const_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#808000;">void</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#808000;">const</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span style=" color:#000000;">*&gt;(&amp;</span><span
style=" color:#000000;">_t1</span><span style=" color:#000000;">))</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">};</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaObject</span><span
style=" color:#000000;">::</span><span style=" color:#000000;">activate</span><span
style=" color:#000000;">(</span><span style=" color:#808000;">this</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&amp;</span><span
style=" color:#800000;">staticMetaObject</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_a</span><span style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">}</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">SIGNAL</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">1</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">Widget</span><span
style=" color:#000000;">::</span><span style=" color:#000000;">countChanged</span><span
style=" color:#000000;">(</span><span style=" color:#808000;">int</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">_t1</span><span style=" color:#000000;">)</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">void</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#000000;">_a</span><span
style=" color:#000000;">[]</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">Q_NULLPTR</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">const_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#808000;">void</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#808000;">const</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span style=" color:#000000;">*&gt;(&amp;</span><span
style=" color:#000000;">_t1</span><span style=" color:#000000;">))</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">};</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaObject</span><span
style=" color:#000000;">::</span><span style=" color:#000000;">activate</span><span
style=" color:#000000;">(</span><span style=" color:#808000;">this</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&amp;</span><span
style=" color:#800000;">staticMetaObject</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">1</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_a</span><span style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">}</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">SIGNAL</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">2</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">Widget</span><span
style=" color:#000000;">::</span><span style=" color:#000000;">valueChanged</span><span
style=" color:#000000;">(</span><span style=" color:#808000;">double</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_t1</span><span style=" color:#000000;">)</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">void</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#000000;">_a</span><span
style=" color:#000000;">[]</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">Q_NULLPTR</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">const_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#808000;">void</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#808000;">const</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span style=" color:#000000;">*&gt;(&amp;</span><span
style=" color:#000000;">_t1</span><span style=" color:#000000;">))</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">};</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaObject</span><span
style=" color:#000000;">::</span><span style=" color:#000000;">activate</span><span
style=" color:#000000;">(</span><span style=" color:#808000;">this</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&amp;</span><span
style=" color:#800000;">staticMetaObject</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">2</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_a</span><span style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">}</span></pre>
    </div>
    之所以程序员不能给信号编写函数实体代码，那是因为必须由 moc
    工具为信号生成实体代码，如果程序员自作聪明编一个信号函数实体，程序编译时会报错，因为重名的函数参数还一样，会报重定义错误。<br>
    因此程序员只需要声明信号，而不用管信号函数的实体代码，交给 moc 工具生成就行了。<br>
    <br>
    三个信号函数里的代码是类似的，首先是指针数组 _a 的定义，_a 里面第一个指针是 Q_NULLPTR（就是 NULL），这个指针是预留给
    元对系统内部注册元方法参数类型时使用；第二个指针是参数_t1 的指针；如果有更多的参数，那么会继续将指针填充到 _a 里面。_a
    是用于传递从信号到槽函数的参数的。<br>
    <br>
    为什么信号的参数可以比槽函数的参数多？因为槽函数接收到 _a
    指针数组时，只需要取出自己需要的前面几个参数就够了，槽函数不管多余的参数。信号里的参数不能比槽函数里的少，那样槽函数访问指针数组时会越界，造成内存访问错误。<br>
    <br>
    以 valueChanged 信号实体代码为例，QMetaObject::activate 函数是负责联络接收方槽函数的，它根据源头对象指针
    this、源头的元对象指针 &amp;staticMetaObject、信号序号 2、信号参数数组&nbsp; _a
    去找寻需要激活的槽函数，最终会调用每个关联到该信号的槽函数。最后的小节会讲如何从信号触发一步步走到槽函数调用的。<br>
    <br>
    对于信号的触发，我们使用的是 emit 关键字，可以用右键菜单 “Follow Symbol Under Cursor”方法找到它的定义：<br>
    <div class="code"># define Q_EMIT<br>
      #ifndef QT_NO_EMIT<br>
      # define emit<br>
      #endif</div>
    关键字 emit 是一个空的宏，也有等价的宏名称 Q_EMIT，无论使用 emit 关键字或者 Q_EMIT 触发信号都是可以的。由于 emit
    本身是空宏，所以直接调用信号函数与使用 emit 触发信号，是没有区别的。 emit 的作用其实就是提醒程序员，这里正在触发一个信号，对编译器而言
    emit 跟不存在一样。<br>
    <br>
    程序员编写代码应该使用 emit 或 Q_EMIT 触发信号，这样代码的可读性更好，也更规范。<br>
    <br>
    <div class="os2"> 4.6.3 MOS原理之三：静态数据 </div>
    <br>
    打开 moc_widget.cpp ，可以看到里面有三个静态数据块，开头的第一个是 qt_meta_stringdata_Widget
    结构体实例，第二个是 qt_meta_data_Widget 无符号整数数组，第三个是位于 qt_static_metacall() 函数之后的
    Widget::staticMetaObject 静态元对象。我们来看看这些数据代码的意义。<br>
    <br>
    <span style="font-weight: bold;">（1）qt_meta_stringdata_Widget 静态字符串数据</span><br>
    moc_widget.cpp 文件开头是这样的：<br>
    <div class="code"><span style=" color:#000080;">QT_BEGIN_MOC_NAMESPACE</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#808000;">struct</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">qt_meta_stringdata_Widget_t</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QByteArrayData</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">data</span><span style=" color:#000000;">[</span><span
style=" color:#000080;">13</span><span style=" color:#000000;">];</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">char</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">stringdata</span><span
style=" color:#000000;">[</span><span style=" color:#000080;">125</span><span style=" color:#000000;">];</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">};</span></pre>
    </div>
    QT_BEGIN_MOC_NAMESPACE 宏和文件末尾的 QT_END_MOC_NAMESPACE 都是空宏，仅用于提示程序员，这两个宏中间是
    MOC 里的代码。<br>
    然后 struct 关键字声明了结构体类型 qt_meta_stringdata_Widget_t ，里面有两个成员，data 是 13 个
    QByteArrayData 数组，stringdata 是一个长度 125
    的字节数组。这里仅仅是结构体声明（相当于类的声明），没有定义结构体实例，后面涉及存储数据时才定义实例。qt_meta_stringdata_Widget_t
    名字里 Widget 是类名，不同的类使用的结构体名称不一样。<br>
    <br>
    如果跟踪 QByteArrayData 声明，可以发现它也是一个结构体，等同于 QArrayData，我们摘取
    QArrayData声明开头的一部分，与我们本节无关的东西忽略掉了（声明文件
    C:\Qt\Qt5.4.0\5.4\mingw491_32\include\QtCore\qarraydata.h ）：<br>
    <div class="code"><span style=" color:#808000;">struct</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#000080;">Q_CORE_EXPORT</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#800080;">QArrayData</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QtPrivate</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">RefCount</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">ref</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">int</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">size</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">uint</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">alloc</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">31</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">uint</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">capacityReserved</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">1</span><span style=" color:#000000;">;</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">qptrdiff</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">offset</span><span
style=" color:#000000;">;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">in</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">bytes</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">from</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">beginning</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">of</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">header</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">void</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#000000;">data</span><span
style=" color:#000000;">()</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000080;">Q_ASSERT</span><span
style=" color:#000000;">(</span><span style=" color:#800000;">size</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">                </span><span style=" color:#000000;">||</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">offset</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">||</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800080;">size_t</span><span
style=" color:#000000;">(</span><span style=" color:#800000;">offset</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&gt;=</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">sizeof</span><span
style=" color:#000000;">(</span><span style=" color:#800080;">QArrayData</span><span
style=" color:#000000;">));</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">return</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#808000;">char</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*&gt;(</span><span
style=" color:#808000;">this</span><span style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">+</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800000;">offset</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">const</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">*</span><span style=" color:#000000;">data</span><span style=" color:#000000;">()</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">const</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000080;">Q_ASSERT</span><span
style=" color:#000000;">(</span><span style=" color:#800000;">size</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">                </span><span style=" color:#000000;">||</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">offset</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">||</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800080;">size_t</span><span
style=" color:#000000;">(</span><span style=" color:#800000;">offset</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&gt;=</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">sizeof</span><span
style=" color:#000000;">(</span><span style=" color:#800080;">QArrayData</span><span
style=" color:#000000;">));</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">return</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#808000;">const</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">char</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#808000;">this</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">+</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">offset</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">    <span
style=" color:#008000;">//后面无关的都忽略掉<br></span><span style=" color:#000000;">};</span></pre>
    </div>
    结构体声明里的 Q_CORE_EXPORT 是用于动态链接库导出的关键字，目前可以不用管它。<br>
    C++ 中结构体与类其实差不多，只是结构体成员默认为公有的，类成员默认为私有的，其他是一样的。所以 QArrayData 有自己的成员函数，两个重载的
    data() 都是用于获取数据的函数，第一个返回非常量指针，第二个返回常量指针。<br>
    QArrayData 有五个普通成员变量，本人在 32 位系统上对这个结构体进行了实测，QArrayData 占用总长度是 16 字节。<br>
    <ul>
      <li>ref 是指引用计数，ref 自己占用结构体 4 字节，在浅拷贝里面可能用到（见 3.3.3 节），我们这里没用到，可以不管。</li>
      <li>size 记录数据块长度，size 为 int 类型，自己占用结构体 4 字节。</li>
      <li>alloc 占用 uint 类型 31 bit，而 capacityReserved 占用 uint 类型 1 bit，这二者加起来是 4
        字节，这个与我们本节无关，也不管它。</li>
      <li>offset 是指数据块从起始位置的字节数偏移，offset 自己也占用结构体 4 字节。</li>
    </ul>
    上面列举的 5 个普通成员里面，我们后面用到的其实只有 size 和 offset ，其他的无视，每个 QArrayData 实例占用 16 字节。<br>
    <br>
    data() 函数内部首先判断 数据块大小 size 是否为 0，以及 offset 是否超出数据块存储范围，然后它返回的数据指针是 this 指针位置
    加上 offset 偏移之后的位置。data() 函数返回值，是从本结构体对象起始位置 this 开始算起，加了 offset
    偏移，就是返回的数据指针。<br>
    <br>
    讲 QArrayData 内容是为了解释下面这个宏的意义，我们回到 moc_widget.cpp 文件，接着往下看：<br>
    <div class="code"><span style=" color:#000080;">#define</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#000080;">QT_MOC_LITERAL</span><span style=" color:#000000;">(</span>idx<span
        style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span>ofs<span
        style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span>len<span
        style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#c0c0c0;">\</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000080;">Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET</span><span
style=" color:#000000;">(</span>len<span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#c0c0c0;">\</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span>qptrdiff<span style=" color:#000000;">(</span><span
style=" color:#000080;">offsetof</span><span style=" color:#000000;">(</span>qt_meta_stringdata_Widget_t<span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span>stringdata<span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">+</span><span
style=" color:#c0c0c0;"> </span>ofs<span style=" color:#c0c0c0;"> </span><span style=" color:#c0c0c0;">\</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">-</span><span
style=" color:#c0c0c0;"> </span>idx<span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">sizeof</span><span
style=" color:#000000;">(</span>QByteArrayData<span style=" color:#000000;">))</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#c0c0c0;">\</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">)</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#808000;">static</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">const</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">qt_meta_stringdata_Widget_t</span><span style=" color:#c0c0c0;"> </span>qt_meta_stringdata_Widget<span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000080;">QT_MOC_LITERAL</span><span style=" color:#000000;">(</span><span
style=" color:#000080;">0</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">6</span><span style=" color:#000000;">),</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">"Widget"</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000080;">QT_MOC_LITERAL</span><span style=" color:#000000;">(</span><span
style=" color:#000080;">1</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">7</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">15</span><span style=" color:#000000;">),</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">"nickNameChanged"</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000080;">QT_MOC_LITERAL</span><span style=" color:#000000;">(</span><span
style=" color:#000080;">2</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">23</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0</span><span style=" color:#000000;">),</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">""</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000080;">QT_MOC_LITERAL</span><span style=" color:#000000;">(</span><span
style=" color:#000080;">3</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">24</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">10</span><span style=" color:#000000;">),</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">"strNewName"</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000080;">QT_MOC_LITERAL</span><span style=" color:#000000;">(</span><span
style=" color:#000080;">4</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">35</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">12</span><span style=" color:#000000;">),</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">"countChanged"</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000080;">QT_MOC_LITERAL</span><span style=" color:#000000;">(</span><span
style=" color:#000080;">5</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">48</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">9</span><span style=" color:#000000;">),</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">"nNewCount"</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000080;">QT_MOC_LITERAL</span><span style=" color:#000000;">(</span><span
style=" color:#000080;">6</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">58</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">12</span><span style=" color:#000000;">),</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">"valueChanged"</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000080;">QT_MOC_LITERAL</span><span style=" color:#000000;">(</span><span
style=" color:#000080;">7</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">71</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">11</span><span style=" color:#000000;">),</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">"dblNewValue"</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000080;">QT_MOC_LITERAL</span><span style=" color:#000000;">(</span><span
style=" color:#000080;">8</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">83</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">11</span><span style=" color:#000000;">),</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">"setNickName"</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000080;">QT_MOC_LITERAL</span><span style=" color:#000000;">(</span><span
style=" color:#000080;">9</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">95</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">8</span><span style=" color:#000000;">),</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">"setCount"</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000080;">QT_MOC_LITERAL</span><span style=" color:#000000;">(</span><span
style=" color:#000080;">10</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">104</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">8</span><span style=" color:#000000;">),</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">"nickName"</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000080;">QT_MOC_LITERAL</span><span style=" color:#000000;">(</span><span
style=" color:#000080;">11</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">113</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">5</span><span style=" color:#000000;">),</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">"count"</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000080;">QT_MOC_LITERAL</span><span style=" color:#000000;">(</span><span
style=" color:#000080;">12</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">119</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">5</span><span style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">"value"</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">},</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#008000;">"Widget\0nickNameChanged\0\0strNewName\0"</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#008000;">"countChanged\0nNewCount\0valueChanged\0"</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#008000;">"dblNewValue\0setNickName\0setCount\0"</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#008000;">"nickName\0count\0value"</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">};</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000080;">#undef</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">QT_MOC_LITERAL</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
    </div>
    QT_MOC_LITERAL 宏的生命期非常短，它就是为了填充结构体实例 qt_meta_stringdata_Widget 而定义的，填充完，这个宏就
    被取消定义了 #undef 。<br>
    <br>
    qt_meta_stringdata_Widget 是结构体类型 qt_meta_stringdata_Widget_t 的实例，它前半部分是是 13
    个 QByteArrayData 组成的数组 data，后半部分是一堆字符串组成的字节数组 stringdata。<br>
    stringdata 里面是多个字符串的拼接，从 "Widget\0"&nbsp; 一直到 "value" 。使用 '\0' 分隔的字符串个数与
    data 数组是一一对应的，都是 13 个。<br>
    <br>
    QT_MOC_LITERAL 宏接收 3 个参数，idx 是 stringdata 里面字符串的序号，ofs 是 stringdata
    里面字符串的起始偏移，len 是指 stringdata 里面字符串的长度。举例来说：<br>
    <ul>
      <li>第 0 号字符串 "Widget\0" （类名），在字符串数组里偏移是 0，长度是 6；</li>
      <li>第 1 号字符串 "nickNameChanged\0"（信号名称），在字符串数组里偏移是 7，长度是 15；</li>
      <li>第 2 号字符串 "\0"（占位字符串，空的），在字符串数组里偏移是 23，长度是 0；</li>
      <li>第 3 号字符串 "strNewName\0"（信号里的参数名），在字符串数组里偏移是 24， 长度是 10；</li>
      <li>以此类推。</li>
    </ul>
    QT_MOC_LITERAL 宏就是根据三元组 (idx, ofs, len) 构造一个 QByteArrayData 对象填充到对应的数组位置。因为
    QByteArrayData 里面并没有类似的三元组 (idx, ofs, len)，QByteArrayData 其实只用了里面两个成员 size 和
    offset ：<br>
    size 就是 QT_MOC_LITERAL 宏参数里的 len，代表字符串长度。<br>
    offset 计算方式比较特别：<br>
    <div class="code">qptrdiff(offsetof(qt_meta_stringdata_Widget_t, stringdata)
      + ofs \<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - idx * sizeof(QByteArrayData))
      \</div>
    外层的 qptrdiff 就是把里面的数据长度变得与系统平台指针长度一样，对于 32 位系统把里面数据变成 32 位长度 qint32，对于 64
    位系统把里面的数据变成 64 位长度 qint64。本人测试用的 32 位系统，所以不用管外层的 qptrdiff() ，当 qint32
    类型数值就行了。<br>
    qptrdiff() 里面的计算公式是：<br>
    <div class="code">offsetof(qt_meta_stringdata_Widget_t, stringdata) + ofs -
      idx * sizeof(QByteArrayData)</div>
    offsetof(qt_meta_stringdata_Widget_t, stringdata) 比较好理解，就是后半截的字符数组
    stringdata 在结构体 qt_meta_stringdata_Widget_t 里的偏移。<br>
    对于我们这个例子，qt_meta_stringdata_Widget_t 前半部分是 13 个 QByteArrayData 实例，而之前测试
    QByteArrayData 是 16 字节长度，13*16 == 208，那么上面公式简化之后：<br>
    <div class="code">208 + ofs - idx *16</div>
    根据这个简化公式，计算得到 QByteArrayData 里面成员 offset 的数值。<br>
    <br>
    其实 208 + ofs 就是每个字符串在大结构体 qt_meta_stringdata_Widget_t 里的相对偏移。那为什么要在这数值里面减去
    idx *16 呢？<br>
    <br>
    这与 QByteArrayData（同 QArrayData ）里面的函数 data() 有关，之前说过 QArrayData::data()
    函数返回值，是从本结构体对象起始位置 this 开始算起，加了 offset 偏移，就是返回的数据指针。<br>
    <br>
    大结构体 qt_meta_stringdata_Widget_t 开头是 13 个 QByteArrayData 实例：<br>
    <ul>
      <li>对于 0 号的 QByteArrayData 实例，它的 this 指向 qt_meta_stringdata_Widget_t 起始 +
        0*16；</li>
      <li>对于 1 号的 QByteArrayData 实例，它的 this 指向 qt_meta_stringdata_Widget_t 起始 +
        1*16；</li>
      <li>对于 2 号的 QByteArrayData 实例，它的 this 指向 qt_meta_stringdata_Widget_t 起始 +
        2*16；</li>
      <li>对于 3 号的 QByteArrayData 实例，它的 this 指向 qt_meta_stringdata_Widget_t 起始 +
        3*16；</li>
      <li>依次类推。</li>
    </ul>
    简化公式
    <div class="code">208 + ofs - idx *16</div>
    里面的 idx *16 是当前 QByteArrayData 实例位置相对于 qt_meta_stringdata_Widget_t
    起始位置的偏移，简单说就是 一减一加 抵消掉。然后 data() 函数返回值才会指向正确的 idx&nbsp; 序号的字符串起始内存位置。<br>
    <br>
    idx *16 的减法是在 QT_MOC_LITERAL 宏定义提前做好，然后每个 QByteArrayData 实例的 this
    指针自动把偏移加上了，这样就抵消了，最后 data() 函数返回的就是序号为 idx 的字符串内存地址指针。<br>
    <br>
    QByteArrayData&nbsp; 两个成员 size 和 offset 的计算方式清楚了之后，QT_MOC_LITERAL 宏定义里出现的巨长的
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET，跟踪之后其实就是下面这一句：<br>
    <div class="code"><span style=" color:#000080;">#define</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#000080;">Q_STATIC_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET</span><span
        style=" color:#000000;">(</span>size<span style=" color:#000000;">,</span><span
        style=" color:#c0c0c0;"> </span>offset<span style=" color:#000000;">)</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#c0c0c0;">\</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">{</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">Q_REFCOUNT_INITIALIZE_STATIC</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span>size<span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span>offset<span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span style=" color:#c0c0c0;">\</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#008000;">/**/</span></pre>
    </div>
    这里面的五条数据与 QByteArrayData 结构体五个成员：ref 、size 、alloc 、capacityReserved 、offset
    一一对应，填充进去就生成了 QByteArrayData 实例。<br>
    <br>
    QT_MOC_LITERAL 宏的意义就是根据三元组&nbsp; (idx, ofs, len) 计算并填充 QByteArrayData
    实例里面&nbsp; size 和 offset 两个成员变量（其他成员用固定值），然后通过 QByteArrayData::data() 函数就能获取
    stringdata 里序号为 idx 的字符串起始位置指针。<br>
    <br>
    搞那么复杂的 QT_MOC_LITERAL 宏，其实就是为了获取 stringdata 字符数组里每个字符串起始位置指针。<br>
    我们人类用肉眼直接看，按照 '\0' 切分字符串，很容易知道每个字符串的起始位置。<br>
    但是对于计算机程序而言，字符串处理函数都以 '\0' 为字符串结束标志，所以处理不了多个以 '\0'
    分隔的字符串，因此要用这么复杂的宏配合结构体来实现。<br>
    <br>
    对于结构体实例 qt_meta_stringdata_Widget，感兴趣的同学可以复制 moc_widget.cpp 开头相关代码，然后用下面简单的
    for 循环打印各个字符串：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;"><span
          style=" color:#000080;">&nbsp;&nbsp;&nbsp; qDebug</span><span style=" color:#000000;">()&lt;&lt;</span><span
          style=" color:#808000;">sizeof</span><span style=" color:#000000;">(</span><span
          style=" color:#800080;">QByteArrayData</span><span style=" color:#000000;">);</span><span
          style=" color:#c0c0c0;"></span><span style=" color:#008000;"></span>&nbsp;&nbsp;
        <br>&nbsp;&nbsp;&nbsp; //打印字符串</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">for</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#808000;">int</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">i</span><span style=" color:#000000;">=</span><span
style=" color:#000080;">0</span><span style=" color:#000000;">;</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">i</span><span style=" color:#000000;">&lt;</span><span style=" color:#000080;">13</span><span
style=" color:#000000;">;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">i</span><span
style=" color:#000000;">++)</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#008000;">//把</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">void*</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">转成</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">char*</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">打印</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000080;">qDebug</span><span
style=" color:#000000;">()&lt;&lt;</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">(</span><span style=" color:#808000;">char</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">*)(</span>qt_meta_stringdata_Widget<span style=" color:#000000;">.</span><span
style=" color:#800000;">data</span><span style=" color:#000000;">[</span><span style=" color:#000000;">i</span><span
style=" color:#000000;">].</span><span style=" color:#000000;">data</span><span
style=" color:#000000;">());</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span></pre>
    </div>
    打印结果如下图所示：<br>
    <center><img src="images/ch04/ch04-06-02.png" alt="strings"></center>
    可见 qt_meta_stringdata_Widget_t 结构体设计得很精巧，虽然 QT_MOC_LITERAL
    宏比较复杂，但是使用起来是非常简单方便的。通过 data[] 数组，可以直接打印 stringdata
    里保存的每个字符串，而不用再去猜每个字符串起始位置。<br>
    <br>
    代码里定义的 qt_meta_stringdata_Widget 静态实例，说白了一切都是为了字符串，结构体里的 stringdata
    保存了关键的字符串信息：<br>
    <ul>
      <li>首先是类名 "Widget"；</li>
      <li>nickNameChanged 信号名;</li>
      <li>空串，元方法标签 tag 描述占一个空位，例子的信号和槽都没有 tag。</li>
      <li>nickNameChanged 信号参数名；</li>
      <li>countChanged 信号名；</li>
      <li>countChanged&nbsp;信号参数名；</li>
      <li>valueChanged 信号名；</li>
      <li>valueChanged&nbsp;信号参数名；</li>
      <li>setNickName 槽函数名称；</li>
      <li>setCount 槽函数名称；</li>
      <li>属性名 nickName；</li>
      <li>属性名 count；</li>
      <li>属性名 value。</li>
    </ul>
    基于这些字符串，Qt 程序才能在运行时自行查询类的名称、根据元方法名称字符串调用元方法、根据属性名称查询设置属性值等。讲完第一个结构体实例
    qt_meta_stringdata_Widget，我们下面来看第二个数据块 qt_meta_data_Widget，这两个名字有点像，第一个是
    stringdata，第二个是 data。<br>
    <br>
    <span style="font-weight: bold;">（2）qt_meta_data_Widget 数组</span><br>
    接着看 moc_widget.cpp 代码，紧跟上面字符串数据的就是 uint 数组 qt_meta_data_Widget：<br>
    <div class="code"><span style=" color:#808000;">static</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#808000;">const</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#800080;">uint</span><span style=" color:#c0c0c0;">
      </span>qt_meta_data_Widget<span style=" color:#000000;">[]</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#000000;">{</span>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">content:</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">7</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">       </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">revision</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">       </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">classname</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">classinfo</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">5</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">   </span><span style=" color:#000080;">14</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">methods</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">3</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">   </span><span style=" color:#000080;">54</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">properties</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">enums/sets</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">constructors</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">       </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">flags</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">3</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">       </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">signalCount</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">signals:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">name,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">argc,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">parameters,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">tag,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">flags</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">   </span><span style=" color:#000080;">39</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">2</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x06</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">/*</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">Public</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">*/</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">4</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">   </span><span style=" color:#000080;">42</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">2</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x06</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">/*</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">Public</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">*/</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">6</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">   </span><span style=" color:#000080;">45</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">2</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x06</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">/*</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">Public</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">*/</span><span style=" color:#000000;">,</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">slots:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">name,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">argc,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">parameters,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">tag,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">flags</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">8</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">   </span><span style=" color:#000080;">48</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">2</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x0a</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">/*</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">Public</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">*/</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">9</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">   </span><span style=" color:#000080;">51</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">2</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x0a</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">/*</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">Public</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">*/</span><span style=" color:#000000;">,</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">signals:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">parameters</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Void</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">3</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Void</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Int</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;">    </span><span style=" color:#000080;">5</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Void</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Double</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">7</span><span
style=" color:#000000;">,</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">slots:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">parameters</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Void</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">3</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Void</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Int</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;">    </span><span style=" color:#000080;">5</span><span style=" color:#000000;">,</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">properties:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">name,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">type,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">flags</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">      </span><span style=" color:#000080;">10</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x00495103</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">      </span><span style=" color:#000080;">11</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Int</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x00495103</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">      </span><span style=" color:#000080;">12</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Double</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x00495003</span><span
style=" color:#000000;">,</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">properties:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">notify_signal_id</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">2</span><span
style=" color:#000000;">,</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">0</span><span
style=" color:#c0c0c0;">        </span><span style=" color:#008000;">//</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">eod</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">};</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
    </div>
    Qt5 版本的 qt_meta_data_Widget 要比 Qt4 时候的数组复杂一些，因为 Qt5 加入了参数类型检查，因此多出来带有
    QMetaType 字样的几行。我们对这个数组里的代码分块来看看：<br>
    <span style="font-weight: bold;">① 目录数据条目</span><br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">content:</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">7</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">       </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">revision</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">       </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">classname</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">classinfo</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">5</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">   </span><span style=" color:#000080;">14</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">methods</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">3</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">   </span><span style=" color:#000080;">54</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">properties</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">enums/sets</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">constructors</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">       </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">flags</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">3</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">       </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">signalCount</span></pre>
    </div>
    content 是目录的意思，前面 14 个数就是 qt_meta_data_Widget
    里面所有数据的目录结构，前面目录部分长度是固定的，而后面关于信号、槽、参数类型等数据条目个数是不确定的，根据前面的目录里 14 个数才能知道后面有多少东
    西。<br>
    目录对应一个固定的结构体，在 Qt 核心源码里可以找到结构体声明，文件为<br>
    C:\Qt\Qt5.4.0\5.4\Src\qtbase\src\corelib\kernel\qmetaobject_p.h，行号 160：<br>
    <div class="code"><span style=" color:#808000;">struct</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#800080;">QMetaObjectPrivate</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">enum</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">OutputRevision</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">7</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">};</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">Used</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">by</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">moc,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">qmetaobjectbuilder</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">and</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">qdbus</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">int</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">revision</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">int</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">className</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">int</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">classInfoCount</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800000;">classInfoData</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">int</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">methodCount</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800000;">methodData</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">int</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">propertyCount</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800000;">propertyData</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">int</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">enumeratorCount</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800000;">enumeratorData</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">int</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">constructorCount</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800000;">constructorData</span><span
style=" color:#000000;">;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//since</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">revision</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">2</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">int</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">flags</span><span
style=" color:#000000;">;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//since</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">revision</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">3</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">int</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">signalCount</span><span
style=" color:#000000;">;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//since</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">revision</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">4</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#008000;">//</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">revision</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">5</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">introduces</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">changes</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">in</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">normalized</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">signatures,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">no</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">new</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">members</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#008000;">//</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">revision</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">6</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">added</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">qt_static_metacall</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">as</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">a</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">member</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">of</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">each</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">Q_OBJECT</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">and</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">inside</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">QMetaObject</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">itself</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#008000;">//</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">revision</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">7</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">is</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">Qt</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">5   <br>    //后面的一大堆函数省略<br><br></span><span
style=" color:#000000;">};</span></pre>
    </div>
    我们逐个看看它们的意思：<br>
    <ul>
      <li>revision 为 7，这是 moc_*.cpp 文件格式的修订版本号，之前 Qt 4.8.* 用的是修订版 6，而目前 Qt 5
        用的是修订版 7。</li>
      <li>className 总是为 0，这是前面 qt_meta_stringdata_Widget.data[0].data() 指向的字符串。</li>
      <li>classInfoCount 计数为 0，这是 4.4.4 节类的附加信息对应的计数，因为我们这个综合示例没有加额外信息声明，所以是 0。</li>
      <li>classInfoData 为 0，因为附加信息计数为零，在本数组 qt_meta_data_Widget 里面没有 classinfo
        条目。</li>
      <li>methodCount 计数为 5，元方法计数，总共有 3 个信号，2 个 set 槽函数。</li>
      <li>methodData 为 14，表示元方法的数据条目从本数组 qt_meta_data_Widget[14] 开始。</li>
      <li>propertyCount 计数为 3，有 3 个属性声明。</li>
      <li>propertyData 为 54，表示属性的数据条目从本数组 qt_meta_data_Widget[54] 开始.</li>
      <li>enumeratorCount 计数为 0 ，因为我们没有用 Q_ENUMS(...) 声明枚举类型。</li>
      <li>enumeratorData 为 0 ，没有枚举类型的数据条目。</li>
      <li>constructorCount 计数为 0，因为我们没有用 Q_INVOKABLE 声明元构造函数。</li>
      <li>constructorData 为 0，没有元构造函数的数据条目。</li>
      <li>flags 为 0，因为我们没有用 Q_FLAGS(...) 声明标志位。</li>
      <li>signalCount 计数为 3，元方法的数据条目以信号函数打头，信号函数需要 moc
        工具生成代码，所以需要信号计数，其他元方法的函数实体是由程序员编写的，不用额外计数。</li>
    </ul>
    QMetaObjectPrivate 结构体就是对 qt_meta_data_Widget
    等数组（Widget是类名）的统一封装，结构体还声明了一大堆函数，就是用于处理该数组的数据条目。qt_meta_data_Widget
    数组的目录部分就是为了描述后面不定长度的数据条目，如 信号、槽、属性条目等。<br>
    <br>
    <span style="font-weight: bold;">②元方法数据条目</span><br>
    讲完目录部分，下面看看信号和槽等元方法数据条目：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">signals:</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">name,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">argc,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">parameters,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">tag,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">flags</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">   </span><span style=" color:#000080;">39</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">2</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x06</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">/*</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">Public</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">*/</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">4</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">   </span><span style=" color:#000080;">42</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">2</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x06</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">/*</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">Public</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">*/</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">6</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">   </span><span style=" color:#000080;">45</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">2</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x06</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">/*</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">Public</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">*/</span><span style=" color:#000000;">,</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">slots:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">name,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">argc,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">parameters,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">tag,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">flags</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">8</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">   </span><span style=" color:#000080;">48</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">2</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x0a</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">/*</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">Public</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">*/</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">9</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">   </span><span style=" color:#000080;">51</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">2</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x0a</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">/*</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">Public</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">*/</span><span style=" color:#000000;">,</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">signals:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">parameters</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Void</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">3</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Void</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Int</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;">    </span><span style=" color:#000080;">5</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Void</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Double</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">7</span><span
style=" color:#000000;">,</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">slots:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">parameters</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Void</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">3</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Void</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Int</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;">    </span><span style=" color:#000080;">5</span><span style=" color:#000000;">,</span></pre>
    </div>
    上面条目对应 5 个元方法的函数特征和参数类型，目录里显示元方法条目从 qt_meta_data_Widget[14]
    开始，就是指这部分数据条目，下面分别介绍信号和槽函数的数据条目：<br>
    <br>
    ◆ 信号 void nickNameChanged(const QString&amp; strNewName)&nbsp;&nbsp;&nbsp;
    //moc工具生成信号函数实体<br>
    <ul>
      <li>name 为 1，对应前面 qt_meta_stringdata_Widget.data[1].data() 指向的字符串，即
        "nickNameChanged"。</li>
      <li>argc 为 1，代表 1 个参数。</li>
      <li>parameters 为 39，它的参数类型位于本数组 qt_meta_data_Widget[39] 开始的位置。</li>
      <li>tag 为 2，没有元方法标签描述，指向空串，即 qt_meta_stringdata_Widget.data[2].data()
        指向的字符串。</li>
      <li>flags 为 0x06，是指 MethodFlags::AccessPublic | MethodFlags::MethodSignal
        ，公有信号，其实信号都是公有的。</li>
    </ul>
    解释一下 tag，Qt 可以给元方法加标签描述，运行时可以通过 QMetaMethod::​tag() 函数查询，详细说明见 Qt 帮助文档，找到
    QMetaMethod 类的文档，然后搜 tag() 函数即可。我们例子没有加，所以 5 个元方法的 tag 都是
    qt_meta_stringdata_Widget.data[2].data() 指向的空字符串。<br>
    <br>
    再就是元方法的标志位 flags，在 qmetaobject_p.h 里面也有元方法标志位声明： <br>
    <div class="code"><span style=" color:#808000;">enum</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#800080;">MethodFlags</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#000000;">{</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">AccessPrivate</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">AccessProtected</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x01</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">AccessPublic</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x02</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">AccessMask</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x03</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//mask</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">MethodMethod</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">MethodSignal</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x04</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">MethodSlot</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x08</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">MethodConstructor</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x0c</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">MethodTypeMask</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x0c</span><span style=" color:#000000;">,</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">MethodCompatibility</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x10</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">MethodCloned</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x20</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">MethodScriptable</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x40</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">MethodRevisioned</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x80</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">};</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
    </div>
    本节例子代码元方法就是涉及前面两部分的标志位，访问权限 AccessPublic&nbsp; 和 方法类型 MethodSignal
    、MethodSlot ，其他的都没用到。公有信号的 flags 就是两个标志位的二进制或运算，0x02 | 0x04 得到
    0x06，公有槽函数标志位就是 0x02 | 0x08，得到 0x0a 。<br>
    nickNameChanged 信号的参数类型条目是从 qt_meta_data_Widget[39] 开始，也就是这一行三个：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#c0c0c0;">
      </span><span style=" color:#008000;">//</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#008000;">signals:</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#008000;">parameters</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Void</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">3</span><span
style=" color:#000000;">,</span></pre>
      <span style=" color:#000000;"></span></div>
    Void 是返回值类型，QString 是参数类型，3 代表 qt_meta_stringdata_Widget.data[3].data()
    指向的字符串，就是参数的名称 "strNewName"。<br>
    QMetaType 类是 Qt 对自己知道的所有数据类型做的辅助类，包含了各种参数类型的枚举，可用于元对象系统的参数类型识别。<br>
    <br>
    剩下两个信号函数与 nickNameChanged 是类似的，只有 name 字符串序号和 parameters 参数数据有区别，就不重复列举了。<br>
    <br>
    ◆ 槽 void Widget::setNickName(const QString &amp;strNewName)&nbsp;
    //程序员自己编写的函数实体<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">slots:</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">name,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">argc,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">parameters,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">tag,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">flags</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">8</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">   </span><span style=" color:#000080;">48</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">2</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x0a</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">/*</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">Public</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">*/</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">9</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">   </span><span style=" color:#000080;">51</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">2</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x0a</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">/*</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">Public</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">*/</span><span style=" color:#000000;">,</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">signals:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">parameters</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Void</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">3</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Void</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Int</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;">    </span><span style=" color:#000080;">5</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Void</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Double</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">7</span><span
style=" color:#000000;">,</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">slots:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">parameters</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Void</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">3</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Void</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Int</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;">    </span><span style=" color:#000080;">5</span><span style=" color:#000000;">,</span></pre>
    </div>
    <ul>
      <li> name 为 8，对应前面 qt_meta_stringdata_Widget.data[8].data() 指向的字符串，即
        "setNickName"。</li>
      <li> argc 为 1，信号有一个参数</li>
      <li>parameters 为 48，它的参数类型数据条目是从本数组 qt_meta_data_Widget[48] 开始。</li>
      <li>tag 为 2，也是 qt_meta_stringdata_Widget.data[2].data() 指向的空字符串。</li>
      <li> flags 为 0x0a，是公有槽函数标志位 MethodFlags::AccessPublic |
        MethodFlags::MethodSlot 。</li>
    </ul>
    该槽函数的参数类型数据条目是从 qt_meta_data_Widget[48] 开始的一行：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">slots:</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">parameters</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Void</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">3</span><span
style=" color:#000000;">,</span></pre>
    </div>
    Void 是返回值类型，QString 是参数类型，3 是指 qt_meta_stringdata_Widget.data[3].data()
    指向的字符串，就是参数名字 "strNewName" 。我们在 widget.h 头文件 nickNameChanged 信号和 setNickName
    槽函数的参数名都一样，所以这里槽函数的参数名也指向序号为 3 的字符串。<br>
    <br>
    另一个槽函数 setCount 与 setNickName 的数据条目是类似的，只有 name 和 parameters 不一样，不重复列举了。<br>
    <br>
    <span style="font-weight: bold;">③属性条目</span><br>
    现在 qt_meta_data_Widget 数组的目录数据条目、元方法数据条目讲完了，最后一部分是关于属性的数据条目：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">properties:</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">name,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">type,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">flags</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">      </span><span style=" color:#000080;">10</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x00495103</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">      </span><span style=" color:#000080;">11</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Int</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x00495103</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">      </span><span style=" color:#000080;">12</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">Double</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x00495003</span><span
style=" color:#000000;">,</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">properties:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">notify_signal_id</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">2</span><span
style=" color:#000000;">,</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">0</span><span
style=" color:#c0c0c0;">        </span><span style=" color:#008000;">//</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">eod      //eod 代表定义结束</span></pre>
    </div>
    我们在头文件 widget.h 定义了三个属性
    nickName、count、value，三个属性修改时发出相应的三个信号，与上面属性的数据条目一一对应。以属性 nickName 为例：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">properties:</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">name,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">type,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#008000;">flags</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">      </span><span style=" color:#000080;">10</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaType</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0x00495103</span><span
style=" color:#000000;">,</span></pre>
    </div>
    <ul>
      <li> name 为 10，是指属性名是 qt_meta_stringdata_Widget.data[10].data() 指向的字符串，就是
        "nickName"。</li>
      <li>type 为 QMetaType::QString，是 QString 类型。</li>
      <li>flags 为 0x00495103，这个比较复杂，是多个基本标志位的或运算结果。</li>
    </ul>
    我们在 4.4.1 节属性系统简介里列的是简化属性声明，实际上属性系统很复杂，它的完整声明如下：<br>
    <div class="code"> Q_PROPERTY(type name<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (READ
      getFunction [WRITE setFunction] |<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MEMBER
      memberName [(READ getFunction | WRITE setFunction)])<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [RESET
      resetFunction]<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [NOTIFY
      notifySignal]<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [REVISION
      int]<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [DESIGNABLE
      bool]<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [SCRIPTABLE
      bool]<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [STORED bool]<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [USER bool]<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [CONSTANT]<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [FINAL])</div>
    属性声明里的行详细情况请搜 Qt 帮助文档，这里不讲了。<br>
    属性声明里每行都有它对应的标志位，所以属性的 flags 比较复杂，属性标志位也可以在 qmetaobject_p.h 里面找到：<br>
    <div class="code"><span style=" color:#808000;">enum</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#800080;">PropertyFlags</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#000000;">{</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">Invalid</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00000000</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">Readable</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00000001</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">Writable</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00000002</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">Resettable</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00000004</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">EnumOrFlag</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00000008</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">StdCppSet</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00000100</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;">     </span><span
style=" color:#008000;">Override</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">=</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">0x00000200,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">Constant</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00000400</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">Final</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00000800</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">Designable</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00001000</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">ResolveDesignable</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00002000</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">Scriptable</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00004000</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">ResolveScriptable</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00008000</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">Stored</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00010000</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">ResolveStored</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00020000</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">Editable</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00040000</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">ResolveEditable</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00080000</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">User</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00100000</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">ResolveUser</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00200000</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">Notify</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00400000</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">Revisioned</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0x00800000</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">};</span></pre>
    </div>
    nickName 属性标志位 0x00495103 是上面基本标志位的或运算组合，大致的意义如下：<br>
    <ul>
      <li>4 代表 Notify ，有触发信号（nickNameChanged）。</li>
      <li>9 代表 Stored 和 ResolveEditable 。</li>
      <li>5 代表 Scriptable 和 Designable 。</li>
      <li>1 代表 StdCppSet ，有 C++设置函数（setNickName）。</li>
      <li>3 代表 Readable 和 Writable ，可读可写。</li>
    </ul>
    因为 nickName 属性有相关的触发信号，所以有下面的 notify_signal_id 行：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#c0c0c0;">
      </span><span style=" color:#008000;">//</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#008000;">properties:</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#008000;">notify_signal_id</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">       </span><span style=" color:#000080;">2</span><span
style=" color:#000000;">,</span></pre>
    </div>
    nickName 属性对应 SIGNAL 0，count 属性对应 SIGNAL 1，value 属性对应 SIGNAL 2 。<br>
    <br>
    介绍完属性对应的数据条目之后，qt_meta_data_Widget 数组里面的内容就都讲完了。<br>
    qt_meta_data_Widget
    数组其实就是一个索引数据块，记录了元对象系统里的信号、槽、属性等信息、对应的函数名称字符串序号、参数名称字符串序号、参数类型等等。<br>
    <br>
    元对象系统里面凡是字符串类型的都保存在之前的 qt_meta_stringdata_Widget 结构体实例里面，凡是索引数值之类的保存在
    qt_meta_data_Widget 数组里。这两个数据块都是全局类型，而类通常要通过自己的元对象来使用这些数据，就是 moc_widget.cpp
    里面定义的第三个静态数据：类的静态元对象。<br>
    <br>
    <span style="font-weight: bold;">（3）Widget::staticMetaObject 类的静态元对象</span><br>
    在 widget.h 头文件里 Q_OBJECT 宏内部声明了一个静态元对象：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">&nbsp;&nbsp;&nbsp;
        static</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">const</span><span
        style=" color:#c0c0c0;"> </span>QMetaObject<span style=" color:#c0c0c0;">
      </span>staticMetaObject<span style=" color:#000000;">;</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#c0c0c0;">\</span></div>
    moc 工具生成 moc_widget.cpp 时会为它添加赋值代码，这个赋值代码是在 qt_static_metacall() 函数代码后面：<br>
    <div class="code"><span style=" color:#808000;">const</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#800080;">QMetaObject</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#800080;">Widget</span><span style=" color:#000000;">::</span><span
        style=" color:#800000;">staticMetaObject</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#000000;">{</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">{</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">&amp;</span><span style=" color:#800080;">QWidget</span><span
style=" color:#000000;">::</span><span style=" color:#800000;">staticMetaObject</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span>qt_meta_stringdata_Widget<span
style=" color:#000000;">.</span><span style=" color:#800000;">data</span><span style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">      </span>qt_meta_data_Widget<span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;">  </span>qt_static_metacall<span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">Q_NULLPTR</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">Q_NULLPTR</span><span
style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">};</span></pre>
    </div>
    这就是 Widget 类的静态元对象，普通的 Qt 窗体程序都会使用这个静态元对象，它就是元对象系统的核心数据。QMetaObject
    就是封装和处理元对象系统数据的核心类，它的内部有一个关键的私有数据块 d，与上面大括号里的赋值一一对应，它的声明位于：<br>
    C:\Qt\Qt5.4.0\5.4\mingw491_32\include\QtCore\qobjectdefs.h<br>
    头文件里，我们摘取它的私有数据 d 的声明部分：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><br>
      <span style=" color:#808000;"><span style=" color:#808000;">struct</span><span
          style=" color:#c0c0c0;"> </span><span style=" color:#000080;">Q_CORE_EXPORT</span><span
          style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaObject</span>
      </span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">{</span></pre>
      <br>
      <span style=" color:#808000;"><span style=" color:#008000;">//</span><span
          style=" color:#c0c0c0;"> </span><span style=" color:#008000;">忽略前面关系不
          大的<br>
          &nbsp;&nbsp;&nbsp; </span>struct</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#000000;">{</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#008000;">//</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#008000;">private</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#008000;">data</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">const</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaObject</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#800000;">superdata</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">const</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QByteArrayData</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#800000;">stringdata</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">const</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800080;">uint</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">*</span><span style=" color:#800000;">data</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">typedef</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">(*</span><span style=" color:#800080;">StaticMetacallFunction</span><span
style=" color:#000000;">)(</span><span style=" color:#800080;">QObject</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">Call</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">int</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">**);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#800080;">StaticMetacallFunction</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">static_metacall</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">const</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaObject</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">const</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">*</span><span style=" color:#800000;">relatedMetaObjects</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">void</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#800000;">extradata</span><span
style=" color:#000000;">;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">//reserved</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#008000;">for</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">future</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">use</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800000;">d</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">};</span></pre>
    </div>
    里面 typedef 一句是声明函数指针类型，实际函数指针变量是下面一行的 static_metacall。<br>
    私有数据 d 里面有 6 个成员变量，与 moc_widget.cpp 里面静态元对象赋值代码一一对应：<br>
    <ul>
      <li>superdata 是基类元对象指针，赋值为 &amp;QWidget::staticMetaObject。</li>
      <li>stringdata 是 QByteArrayData 数组指针，赋值为前面介绍的
        qt_meta_stringdata_Widget.data，用于获取元对象系统静态字符串。</li>
      <li>data 是元对象系统索引数值的数据块，赋值为前面介绍的 qt_meta_data_Widget。</li>
      <li>static_metacall 是私有静态函数指针，赋值为 qt_static_metacall，因为用到这个函数指针，所以静态元对象赋值代
        码放在该函数之后。</li>
      <li>relatedMetaObjects 是相关元对象指针，这里没有，赋值为空指针 Q_NULLPTR。</li>
      <li>extradata 是保留做将来用途，这里也没有，赋值为空指针 Q_NULLPTR。</li>
    </ul>
    元对象系统使用的静态数据就是这些，两个全局数据块 qt_meta_stringdata_Widget、qt_meta_data_Widget
    以及类自己的静态元对象 Widget::staticMetaObject，设置这些数据都是在做准备工作，最终都是要靠函数来运转的。<br>
    <br>
    <div class="os2"> 4.6.4 MOS原理之四：虚函数 </div>
    <br>
    这部分内容与 widget.h 里面 Q_OBJECT 宏内部声明的函数是相对应的，Q_OBJECT 宏声明了三个虚函数和一个私有静态成员函数：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">&nbsp;&nbsp;&nbsp;
        virtual</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">const</span><span
        style=" color:#c0c0c0;"> </span>QMetaObject<span style=" color:#c0c0c0;">
      </span><span style=" color:#000000;">*</span>metaObject<span style=" color:#000000;">()</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#808000;">const</span><span
        style=" color:#000000;">;</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#c0c0c0;">\</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">virtual</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">*</span>qt_metacast<span style=" color:#000000;">(</span><span
style=" color:#808000;">const</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">char</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*);</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#c0c0c0;">\</span><span style=" color:#808000;"><br>    virtual</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span style=" color:#c0c0c0;"> </span>qt_metacall<span
style=" color:#000000;">(</span>QMetaObject<span style=" color:#000000;">::</span>Call<span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">**);</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#c0c0c0;">\</span><br><br><span style=" color:#808000;"></span><span
style=" color:#808000;"><span style=" color:#808000;">private</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#c0c0c0;">\</span>
<span style=" color:#c0c0c0;">    </span><span style=" color:#000080;">Q_DECL_HIDDEN_STATIC_METACALL</span><span
style=" color:#c0c0c0;"> </span>static</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span>qt_static_metacall<span
style=" color:#000000;">(</span>QObject<span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">*,</span><span style=" color:#c0c0c0;"> </span>QMetaObject<span
style=" color:#000000;">::</span>Call<span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">**);</span><span style=" color:#c0c0c0;"> </span><span style=" color:#c0c0c0;">\</span></pre>
    </div>
    在 moc_widget.cpp 里面，除了前面小节介绍的信号函数实体、静态数据，就剩下这几个函数了。 moc_widget.cpp 就是对
    Q_OBJECT 宏声明内容的补充源代码，与 Q_OBJECT 宏一起实现元对象系统。下面我们来看看这几个函数的定义代码，首先是获取元对象的虚函数
    Widget::metaObject()：<br>
    <div class="code"><span style=" color:#808000;">const</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#800080;">QMetaObject</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#000000;">*</span><span style=" color:#800080;">Widget</span><span
        style=" color:#000000;">::</span><span style=" font-style:italic; color:#000000;">metaObject</span><span
        style=" color:#000000;">()</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#808000;">const</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">return</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QObject</span><span
style=" color:#000000;">::</span>d_ptr<span style=" color:#000000;">-&gt;</span><span
style=" color:#800000;">metaObject</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">?</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QObject</span><span
style=" color:#000000;">::</span>d_ptr<span style=" color:#000000;">-&gt;</span><span
style=" color:#000000;">dynamicMetaObject</span><span style=" color:#000000;">()</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">&amp;</span><span style=" color:#800000;">staticMetaObject</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">}</span></pre>
    </div>
    d_ptr 是通用基类 QObject 里特殊的 QObjectData 对象指针，QObjectData 类对象里有保存动态元对象数据的指针
    metaObject：<br>
    <div class="code"><span style=" color:#808000;">class</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#000080;">Q_CORE_EXPORT</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#800080;">QObjectData</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#000000;">{</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#808000;">public</span><span style=" color:#000000;">:</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">virtual</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">~</span><span style=" font-style:italic; color:#000000;">QObjectData</span><span
style=" color:#000000;">()</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QObject</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#800000;">q_ptr</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QObject</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#800000;">parent</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QObjectList</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">children</span><span
style=" color:#000000;">;</span></pre>
      <pre style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">uint</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">isWidget</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">1</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">uint</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">blockSig</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">1</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">uint</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">wasDeleted</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">1</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">uint</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">isDeletingChildren</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">1</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">uint</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">sendChildEvents</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">1</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">uint</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">receiveChildEvents</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">1</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">uint</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">isWindow</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">1</span><span style=" color:#000000;">;</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//for</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">QWindow</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">uint</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">unused</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">:</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">25</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">int</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">postedEvents</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QDynamicMetaObjectData</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#800000;">metaObject</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#800080;">QMetaObject</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#000000;">dynamicMetaObject</span><span
style=" color:#000000;">()</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">const</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">};</span></pre>
    </div>
    对于普通的 Qt 图形界面程序，QObject::d_ptr-&gt;metaObject 总是为 NULL，只有 QML
    界面程序才会使用动态元对象。所以例子中的 Widget::metaObject() 函数不会返回动态元对象，在不使用 QML
    的情况下，Widget::metaObject() 函数总是返回我们上面小节介绍的静态元对象指针 &amp;staticMetaObject 。<br>
    Widget::metaObject() 是虚函数，如果我们在程序运行时获得了一个 QObject* 指针
    pObj，不知道它原本是什么派生类的，那么就可以执行：<br>
    <div class="code"> pObj-&gt;metaObject()-&gt;className();</div>
    由于类继承的多态性，虚函数就总能找到 pObj 原本类的静态元对象，并返回正确的类名，比如为 "Widget"。<br>
    <br>
    再来看第二个虚函数 Widget::qt_metacast()：<br>
    <div class="code"><span style=" color:#808000;">void</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#000000;">*</span><span style=" color:#800080;">Widget</span><span
        style=" color:#000000;">::</span><span style=" font-style:italic; color:#000000;">qt_metacast</span><span
        style=" color:#000000;">(</span><span style=" color:#808000;">const</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#808000;">char</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span
        style=" color:#000000;">_clname</span><span style=" color:#000000;">)</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(!</span><span style=" color:#000000;">_clname</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">return</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">Q_NULLPTR</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(!</span><span style=" color:#000000;">strcmp</span><span
style=" color:#000000;">(</span><span style=" color:#000000;">_clname</span><span
style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span>qt_meta_stringdata_Widget<span
style=" color:#000000;">.</span><span style=" color:#800000;">stringdata</span><span
style=" color:#000000;">))</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">return</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">static_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#808000;">void</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#808000;">const_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">Widget</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#808000;">this</span><span
style=" color:#000000;">));</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">return</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QWidget</span><span
style=" color:#000000;">::</span><span style=" font-style:italic; color:#000000;">qt_metacast</span><span
style=" color:#000000;">(</span><span style=" color:#000000;">_clname</span><span
style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">}</span></pre>
    </div>
    这个函数可以在运行时把 QObject 派生类对象指针转成合法的基类对象指针，它的参数是基类名称字符串。函数里先判断 _clname
    是否为空，如果是空串就返回空指针 Q_NULLPTR。<br>
    如果 _clname 不是空串，那么将字符串 _clname 与 qt_meta_stringdata_Widget.stringdata
    做比较，当二者相同时，strcmp 返回值为 0，那么 Widget::qt_metacast() 函数返回自身的 this 指针，并做了常量转换，避免
    this 指针被修改。<br>
    qt_meta_stringdata_Widget.stringdata 里面其实有很多个以 '\0' 分隔的字符串，打头的是类名，由于 strcmp
    以 '\0' 作为结束标志，所以 strcmp 只能看到打头的类名字符串，而看不到后面的一大堆东西，因此能直接将 _clname 与
    qt_meta_stringdata_Widget.stringdata 做比较。<br>
    如果 _clname 与当前类名不一样，那么就继续调用基类的 QWidget::qt_metacast(_clname)，这个过程一直迭代到根上的基类
    QObject::qt_metacast(_clname) 为止，如果 _clname 不在类的继承树上，那么返回值就是 NULL。<br>
    qt_metacast() 函数的作用就是能在运行时根据字符串名，将当前对象转为相应的基类对象指针，如果转换不成功就是 NULL。这是 Qt
    自己的运行时类型转换，而不用要求编译器的特性。<br>
    <br>
    前面两个虚函数代码都很简单，第三个虚函数 Widget::qt_metacall() 就比较复杂了，它也是非常重要的调用函数，无论是属性的
    get/set，还是从信号到槽函数的调用过程等，都靠这个函数。 Widget::qt_metacall() 内部会调用一个私有的静态成员函数，就是
    qt_static_metacall()。我们先看虚函数 Widget::qt_metacall()：<br>
    <div class="code"><span style=" color:#808000;">int</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#800080;">Widget</span><span style=" color:#000000;">::</span><span
        style=" font-style:italic; color:#000000;">qt_metacall</span><span style=" color:#000000;">(</span><span
        style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
        style=" color:#800080;">Call</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000000;">_c</span><span style=" color:#000000;">,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_id</span><span
        style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000000;">**</span><span style=" color:#000000;">_a</span><span
        style=" color:#000000;">)</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QWidget</span><span style=" color:#000000;">::</span><span
style=" font-style:italic; color:#000000;">qt_metacall</span><span style=" color:#000000;">(</span><span
style=" color:#000000;">_c</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">_id</span><span style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">_a</span><span style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">0</span><span style=" color:#000000;">)</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">return</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_id</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">InvokeMetaMethod</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">5</span><span style=" color:#000000;">)</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#000000;">qt_static_metacall</span><span
style=" color:#000000;">(</span><span style=" color:#808000;">this</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_c</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_id</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_a</span><span style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">5</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">else</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">RegisterMethodArgumentMetaType</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">5</span><span style=" color:#000000;">)</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#000000;">*</span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#808000;">int</span><span style=" color:#000000;">*&gt;(</span><span
style=" color:#000000;">_a</span><span style=" color:#000000;">[</span><span style=" color:#000080;">0</span><span
style=" color:#000000;">])</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-</span><span style=" color:#000080;">1</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">5</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000080;">#ifndef</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QT_NO_PROPERTIES</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">      </span><span style=" color:#808000;">else</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaObject</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">ReadProperty</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">void</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#000000;">_v</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">_a</span><span style=" color:#000000;">[</span><span style=" color:#000080;">0</span><span
style=" color:#000000;">];</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">switch</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_id</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#000000;">_v</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">nickName</span><span
style=" color:#000000;">();</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">1</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#000000;">_v</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">count</span><span
style=" color:#000000;">();</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">2</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">double</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#000000;">_v</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">m_value</span><span
style=" color:#000000;">;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">default</span><span
style=" color:#000000;">:</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">else</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">WriteProperty</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">void</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#000000;">_v</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">_a</span><span style=" color:#000000;">[</span><span style=" color:#000080;">0</span><span
style=" color:#000000;">];</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">switch</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_id</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">setNickName</span><span
style=" color:#000000;">(*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#000000;">_v</span><span
style=" color:#000000;">));</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">1</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">setCount</span><span
style=" color:#000000;">(*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#000000;">_v</span><span
style=" color:#000000;">));</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">2</span><span style=" color:#000000;">:</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#800000;">m_value</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">!=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">double</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#000000;">_v</span><span
style=" color:#000000;">))</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">                </span><span style=" color:#800000;">m_value</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">double</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#000000;">_v</span><span
style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">                </span><span style=" color:#800080;">Q_EMIT</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">valueChanged</span><span
style=" color:#000000;">(</span><span style=" color:#800000;">m_value</span><span
style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">default</span><span
style=" color:#000000;">:</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">else</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">ResetProperty</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">else</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">QueryPropertyDesignable</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">else</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">QueryPropertyScriptable</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">else</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">QueryPropertyStored</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">else</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">QueryPropertyEditable</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">else</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">QueryPropertyUser</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">else</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">RegisterPropertyMetaType</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">)</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#000000;">*</span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#808000;">int</span><span style=" color:#000000;">*&gt;(</span><span
style=" color:#000000;">_a</span><span style=" color:#000000;">[</span><span style=" color:#000080;">0</span><span
style=" color:#000000;">])</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-</span><span style=" color:#000080;">1</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000080;">#endif</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">QT_NO_PROPERTIES</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">return</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_id</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">}</span></pre>
    </div>
    下面对这个函数代码进行拆解，首先看函数头：<br>
    <div class="code"><span style=" color:#808000;">int</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#800080;">Widget</span><span style=" color:#000000;">::</span><span
        style=" font-style:italic; color:#000000;">qt_metacall</span><span style=" color:#000000;">(</span><span
        style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
        style=" color:#800080;">Call</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000000;">_c</span><span style=" color:#000000;">,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_id</span><span
        style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000000;">**</span><span style=" color:#000000;">_a</span><span
        style=" color:#000000;">)</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">{</span></pre>
    </div>
    例子中 qt_metacall 函数主要有两种用途，第一种是进行信号和槽函数、invokable 元方法等函数调用；另一种是进行属性相关的操作。<br>
    函数头有三个参数，_c 是元调用方式，而 _id 和 _a 的意义根据用途有区别：<br>
    <ul>
      <li> 对于元方法调用，_id 是元方法的绝对序号， _a 与信号函数里封装的参数指针数组 _a 是对应的；</li>
      <li>对于属性操作，_id 是属性的绝对序号，_a 是属性操作需要的参数指针数组。</li>
    </ul>
    QMetaObject::Call 是元对象系统内部使用的元调用类型枚举，可以 Follow 它的符号名，位于文件<br>
    C:\Qt\Qt5.4.0\5.4\mingw491_32\include\QtCore\qobjectdefs.h<br>
    在 QMetaObject 类声明内部定义了这个枚举类型，用于表示元对象系统的调用方式：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">enum</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#800080;">Call</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#800080;">InvokeMetaMethod</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#800080;">ReadProperty</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#800080;">WriteProperty</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#800080;">ResetProperty</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#800080;">QueryPropertyDesignable</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#800080;">QueryPropertyScriptable</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#800080;">QueryPropertyStored</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#800080;">QueryPropertyEditable</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#800080;">QueryPropertyUser</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#800080;">CreateInstance</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#800080;">IndexOfMethod</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#800080;">RegisterPropertyMetaType</span><span
style=" color:#000000;">,</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#800080;">RegisterMethodArgumentMetaType</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">};</span></pre>
    </div>
    <ul>
      <li> InvokeMetaMethod 代表元方法调用，比如信号、槽函数、其他 invokable 元方法。</li>
      <li> 然后从 ReadProperty 到 QueryPropertyUser 一堆枚举，是属性操作相关的，因为属性声明的东西多，它的调用方式枚
        举也很多。</li>
      <li>CreateInstance 是用元构造函数生成新实例的调用方式。</li>
      <li>IndexOfMethod 是 Qt5 新增的调用方式，在新式语法 connect 函数内部，需要先确认 connect
        函数里源头的函数指针是不是真的信号函数指针，再进行关联，后面 qt_static_metacall() 静态私有函数会根据这个调用方式，查询匹配
        的<span style="font-weight: bold;">信号函数的相对序号</span>。</li>
      <li>RegisterPropertyMetaType 是注册属性类型的调用方式，与 qt_meta_data_Widget 数组属性条目的
        QMetaType::* 对应。</li>
      <li>RegisterMethodArgumentMetaType 是注册元方法参数类型的调用方式，与 qt_meta_data_Widget
        数组元方法参数类型条目的 QMetaType::* 对应。</li>
    </ul>
    解释一下绝对序号和相对序号：基类和当前类都有一大堆元方法，这些所有的元方法都有它的绝对序号和相对序号，绝对序号是从顶层基类 QObject
    开始计数，相对序号从当前类开始计数。属性的序号也是有绝对序号和相对序号，计数原理也是类似的。<br>
    <br>
    讲完函数头，下面来看 qt_metacall 函数里面第一句：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&nbsp;&nbsp;&nbsp;
        _id</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QWidget</span><span
        style=" color:#000000;">::</span><span style=" font-style:italic; color:#000000;">qt_metacall</span><span
        style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
        style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000000;">_id</span><span style=" color:#000000;">,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_a</span><span
        style=" color:#000000;">);</span></div>
    这一句直接调用了基类 QWidget::qt_metacall 函数，参数里的 _id
    都是绝对序号，但是经过层层基类函数迭代处理之后，每个基类都会把自己的元方法计数或属性计数减掉，然后返回新的 _id
    ，当把所有基类的计数都减掉之后，我们得到新的 _id 就是我们当前类&nbsp; Widget 里面元方法或属性的相对计数了。<br>
    <br>
    开头这一句代码同时完成了两个任务：第一，如果参数里的绝对序号 _id 是属于基类的，那么基类会调用相应的元方法或进行属性操作；第二，如果参数里的绝对序号
    _id 是当前类 Widget 自己声明的元方法或属性，那么绝对序号 _id 经过基类处理做减法，那么基类 QWidget::qt_metacall
    返回的新 _id 就是我们当前类的元方法或属性的相对 _id ，这样就能根据当前的元方法或属性进行操作了。<br>
    <br>
    请分清楚，在这第一句执行前，函数头里的 _id 是绝对序号，经过第一句基类函数处理后，会得到新的相对序号 _id 。<br>
    后面的代码都是根据从本级类开始计算的相对序号来处理。<br>
    <br>
    接着看 qt_metacall 函数代码：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">&nbsp;&nbsp;&nbsp;
        if</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span
        style=" color:#000000;">_id</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000080;">0</span><span style=" color:#000000;">)</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">return</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_id</span><span style=" color:#000000;">;</span></pre>
    </div>
    当相对序号 _id &lt; 0 时，说明以前的绝对序号由基类处理完了，我们这一层类就不需要干活，直接返回就可以了。_id &lt; 0
    是说明活都干完了。<br>
    <br>
    接下来就是元方法调用的代码：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">&nbsp;&nbsp;&nbsp;
        if</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span
        style=" color:#000000;">_c</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
        style=" color:#800080;">InvokeMetaMethod</span><span style=" color:#000000;">)</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">5</span><span style=" color:#000000;">)</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#000000;">qt_static_metacall</span><span
style=" color:#000000;">(</span><span style=" color:#808000;">this</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_c</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_id</span><span style=" color:#000000;">,</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_a</span><span style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">5</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">else</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">RegisterMethodArgumentMetaType</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">5</span><span style=" color:#000000;">)</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#000000;">*</span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#808000;">int</span><span style=" color:#000000;">*&gt;(</span><span
style=" color:#000000;">_a</span><span style=" color:#000000;">[</span><span style=" color:#000080;">0</span><span
style=" color:#000000;">])</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-</span><span style=" color:#000080;">1</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">5</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span></pre>
    </div>
    这段代码里 5 就是我们当前类 Widget 声明的元方法的计数，三个信号和两个槽函数。<br>
    ◆如果调用方式 _c 为 QMetaObject::InvokeMetaMethod，说明要进行元方法调用：<br>
    <ul>
      <li>如果相对序号 _id &lt; 5 ，就是序号 0 到序号 4，说明是本级类的元方法，那么调用私有静态函数
        qt_static_metacall 来处理。然后把 _id 减去本级类的元方法计数 5 。&nbsp;&nbsp;&nbsp; 注：因为我们的
        Widget 类没有派生类，所以 _id 会变成负数返回，如果 Widget 类还有派生类，那么派生类会继续处理新的相对序号 _id 。</li>
    </ul>
    ◆如果调用方式 _c 为 QMetaObject::RegisterMethodArgumentMetaType，是注册元方法参数类型，这是 Qt5
    引入的新特性，为元方法加入了参数类型的匹配，比如 connect 函数需要检查信号和槽的参数类型是否兼容，所以需要注册元方法的参数类型：<br>
    <ul>
      <li>如果相对序号 _id &lt; 5 ，说明是本级类的元方法，将 _a[0] 指针保存的变量数值设置为 -1，表示处理过了（全局数组
        qt_meta_data_Widget 已经记录了参数类型）。然后将 _id 计数减去本级类的元方法计数 5。</li>
    </ul>
    qt_metacall 函数里面关于元方法调用的代码就上面这些，本级类的信号、槽、invokable 元方法主要靠静态私有函数
    qt_static_metacall 处理，这个静态私有函数等会再讲。<br>
    <br>
    继续看虚函数 qt_metacall 后面的代码，后面代码都是关于属性处理的，对于属性部分代码，我们拆成三块来讲解，首先是读属性操作：<br>
    <div class="code"> <span style=" color:#000080;">#ifndef</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#800080;">QT_NO_PROPERTIES</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">      </span><span style=" color:#808000;">else</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QMetaObject</span><span
style=" color:#000000;">::</span><span style=" color:#800080;">ReadProperty</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">void</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#000000;">_v</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">_a</span><span style=" color:#000000;">[</span><span style=" color:#000080;">0</span><span
style=" color:#000000;">];</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">switch</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_id</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#000000;">_v</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">nickName</span><span
style=" color:#000000;">();</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">1</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#000000;">_v</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">count</span><span
style=" color:#000000;">();</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">2</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">double</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#000000;">_v</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800000;">m_value</span><span
style=" color:#000000;">;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">default</span><span
style=" color:#000000;">:</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
    </div>
    如果没有定义不能使用属性的宏 QT_NO_PROPERTIES，那么才进行后面的属性操作，正常都是有属性的，可以不管这个宏。<br>
    _c 为 QMetaObject::ReadProperty，就是进行读属性的操作，本级类 Widget 总共有 3 个，现在 _id
    是本级类属性的相对序号，_a 是属性操作的参数指针数组。<br>
    _a[0] 是一个指针，对于读属性，它指向返回值的变量，为了写代码方便，把 _a[0] 指针赋给了 _v。<br>
    根据属性相对序号 _id ：<br>
    <ul>
      <li>0号属性是 nickName，使用读函数 nickName() 得到 QString 变量，然后把返回值填到 _v 指向的变量。</li>
      <li>1号属性是 count，使用读函数 count() 得到 int 变量，也把返回值填充到 _v 指向的变量。</li>
      <li>2号属性是 value，注意我们在 widget.h 声明 value 属性时，指定了私有成员 m_value，但省略了读写函数，所以
        moc 工具自动添加了读 value 属性的代码，就是把私有成员 m_value 数值填充到 _v 指向的变量。</li>
    </ul>
    本级类做完读属性处理后，把 _id 减去本级类的属性计数 3 。<br>
    <br>
    接下来是属性操作的第二块代码，写属性操作：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&nbsp;&nbsp;&nbsp;
        }</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">else</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span
        style=" color:#000000;">_c</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
        style=" color:#800080;">WriteProperty</span><span style=" color:#000000;">)</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">void</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#000000;">_v</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">_a</span><span style=" color:#000000;">[</span><span style=" color:#000080;">0</span><span
style=" color:#000000;">];</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">switch</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_id</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">setNickName</span><span
style=" color:#000000;">(*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#000000;">_v</span><span
style=" color:#000000;">));</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">1</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">setCount</span><span
style=" color:#000000;">(*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#000000;">_v</span><span
style=" color:#000000;">));</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">2</span><span style=" color:#000000;">:</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#800000;">m_value</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">!=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">double</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#000000;">_v</span><span
style=" color:#000000;">))</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">                </span><span style=" color:#800000;">m_value</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">double</span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#000000;">_v</span><span
style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">                </span><span style=" color:#800080;">Q_EMIT</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">valueChanged</span><span
style=" color:#000000;">(</span><span style=" color:#800000;">m_value</span><span
style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">default</span><span
style=" color:#000000;">:</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
    </div>
    _c 为 QMetaObject::WriteProperty 时，就是写属性操作，这时候 _a[0] 指针是指向输入参数，用于设置属性值。同样将
    _a[0] 赋给 _v ，方便后面写代码。<br>
    根据属性相对序号 _id：<br>
    <ul>
      <li>0号属性 nickName，设置属性的函数为 setNickName，把输入参数指针 _v 转为 QString*，然后取出 QString
        变量作为参数。</li>
      <li>1号属性 count，设置属性的函数为 setCount，把输入参数指针 _v 转为 int*，然后取出整型变量作为参数。</li>
      <li>2号属性 value，指定了对应的私有成员 m_value，但没有声明读写函数，所以 moc
        工具自动为该属性生成写属性代码，首先将私有成员设置成 _v 指针指向的变量数值，然后触发 valueChanged 信号。因为 value
        属性声明了信号，所以 moc 工具就会在修改成员时发出相应的信号。在指定成员变量的情况下能省略属性的读写函数，这是 Qt 提供的方便特性，但是
        moc 工具生成的代码是固定的，它不会对数值做有效性检查。所以一般建议手动编写属性的读写函数。</li>
    </ul>
    处理完本级类的属性之后，_id 减去本级类的属性计数 3。<br>
    <br>
    属性的读写两块代码讲完之后，剩下的是属性声明其他部分对应的代码：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&nbsp;&nbsp;&nbsp;
        }</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">else</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span
        style=" color:#000000;">_c</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
        style=" color:#800080;">ResetProperty</span><span style=" color:#000000;">)</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">else</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">QueryPropertyDesignable</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">else</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">QueryPropertyScriptable</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">else</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">QueryPropertyStored</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">else</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">QueryPropertyEditable</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">else</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">QueryPropertyUser</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">else</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">RegisterPropertyMetaType</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&lt;</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">)</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#000000;">*</span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#808000;">int</span><span style=" color:#000000;">*&gt;(</span><span
style=" color:#000000;">_a</span><span style=" color:#000000;">[</span><span style=" color:#000080;">0</span><span
style=" color:#000000;">])</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-</span><span style=" color:#000080;">1</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">_id</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">-=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000080;">3</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span>
<span style=" color:#000080;">#endif</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#008000;">//</span><span style=" color:#c0c0c0;"> </span><span style=" color:#008000;">QT_NO_PROPERTIES</span>
<span style=" color:#c0c0c0;">    </span><span style=" color:#808000;">return</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_id</span><span style=" color:#000000;">;</span>
<span style=" color:#000000;">}</span>
<br><span style=" color:#000000;"></span></pre>
    </div>
    ResetProperty 对应属性的重置函数，之前都没有写重置函数，其他的如
    QueryPropertyDesignable、QueryPropertyScriptable、QueryPropertyStored、
    QueryPropertyEditable、QueryPropertyUser，我们在属性声明里都没有加这些行，所以这里的代码全是空的，仅仅是把 _id
    减去本级类的属性计数 3，代表本级类处理了。<br>
    RegisterPropertyMetaType 是注册属性的类型，与注册函数参数类型是相似的，把 _a[0] 指向的变量数值设置为
    -1，然后减去本级类的属性计数 3 。关于属性的操作代码就这些，下面程序就返回新的 _id 了。<br>
    <br>
    之前讲过 _id 在经过基类函数处理后，变成当前类的元方法或属性的相对计数，qt_metacall 继续返回新的 _id 就是为了如果当前类
    Widget 还有自己的派生类，那么派生类就可以按照新的 _id 继续执行下去。从 QObject 基类到我们这层 Widget 类，都有类似的虚函数
    qt_metacall，Qt 元方法调用和属性操作，就是使用这种一层层的基于 _id
    序号的处理方式。基于序号的处理方式是非常精确的，每层基类处理都不能出错，整个元对象系统才会正常工作。<br>
    <br>
    Qt 类库的特点就是设计非常精巧，它本身类库的内部源码、内部实现原理比较复杂，然而使用它做好的类库和信号、槽、属性等特性，是非常简单易用的，所以使用
    Qt 库开发程序是轻松愉快的事。<br>
    <br>
    讲完三个虚函数 metaObject()、qt_metacast()、qt_metacall() ，还剩下一个静态私有函数
    qt_static_metacall()，这个函数专门处理当前类的元方法调用，qt_metacall()
    会调用这个静态私有函数。下面来看看这个静态私有函数的代码：<br>
    <div class="code"><span style=" color:#808000;">void</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#800080;">Widget</span><span style=" color:#000000;">::</span><span
        style=" color:#000000;">qt_static_metacall</span><span style=" color:#000000;">(</span><span
        style=" color:#800080;">QObject</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000000;">*</span><span style=" color:#000000;">_o</span><span
        style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
        style=" color:#800080;">Call</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000000;">_c</span><span style=" color:#000000;">,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_id</span><span
        style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000000;">**</span><span style=" color:#000000;">_a</span><span
        style=" color:#000000;">)</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">InvokeMetaMethod</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#800080;">Widget</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#000000;">_t</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">static_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#800080;">Widget</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#000000;">_o</span><span
style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">switch</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_id</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_t</span><span style=" color:#000000;">-&gt;</span><span
style=" color:#000000;">nickNameChanged</span><span style=" color:#000000;">((*</span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">const</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">(*)&gt;(</span><span style=" color:#000000;">_a</span><span
style=" color:#000000;">[</span><span style=" color:#000080;">1</span><span style=" color:#000000;">])));</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">1</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_t</span><span style=" color:#000000;">-&gt;</span><span
style=" color:#000000;">countChanged</span><span style=" color:#000000;">((*</span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span style=" color:#000000;">(*)&gt;(</span><span
style=" color:#000000;">_a</span><span style=" color:#000000;">[</span><span style=" color:#000080;">1</span><span
style=" color:#000000;">])));</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">break</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">2</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_t</span><span style=" color:#000000;">-&gt;</span><span
style=" color:#000000;">valueChanged</span><span style=" color:#000000;">((*</span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">double</span><span
style=" color:#000000;">(*)&gt;(</span><span style=" color:#000000;">_a</span><span
style=" color:#000000;">[</span><span style=" color:#000080;">1</span><span style=" color:#000000;">])));</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">3</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_t</span><span style=" color:#000000;">-&gt;</span><span
style=" color:#000000;">setNickName</span><span style=" color:#000000;">((*</span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">const</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">(*)&gt;(</span><span style=" color:#000000;">_a</span><span
style=" color:#000000;">[</span><span style=" color:#000080;">1</span><span style=" color:#000000;">])));</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">4</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_t</span><span style=" color:#000000;">-&gt;</span><span
style=" color:#000000;">setCount</span><span style=" color:#000000;">((*</span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span style=" color:#000000;">(*)&gt;(</span><span
style=" color:#000000;">_a</span><span style=" color:#000000;">[</span><span style=" color:#000080;">1</span><span
style=" color:#000000;">])));</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">break</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">default</span><span
style=" color:#000000;">:</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">else</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">IndexOfMethod</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">int</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#000000;">result</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#808000;">int</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*&gt;(</span><span
style=" color:#000000;">_a</span><span style=" color:#000000;">[</span><span style=" color:#000080;">0</span><span
style=" color:#000000;">]);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">void</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">**</span><span style=" color:#000000;">func</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">**&gt;(</span><span
style=" color:#000000;">_a</span><span style=" color:#000000;">[</span><span style=" color:#000080;">1</span><span
style=" color:#000000;">]);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#808000;">typedef</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">(</span><span style=" color:#800080;">Widget</span><span
style=" color:#000000;">::*</span><span style=" color:#800080;">_t</span><span style=" color:#000000;">)(</span><span
style=" color:#808000;">const</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QString</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">&amp;</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#800080;">_t</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*&gt;(</span><span
style=" color:#000000;">func</span><span style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">static_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#800080;">_t</span><span
style=" color:#000000;">&gt;(&amp;</span><span style=" color:#800080;">Widget</span><span
style=" color:#000000;">::</span>nickNameChanged<span style=" color:#000000;">))</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">                </span><span style=" color:#000000;">*</span><span
style=" color:#000000;">result</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#808000;">typedef</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">(</span><span style=" color:#800080;">Widget</span><span
style=" color:#000000;">::*</span><span style=" color:#800080;">_t</span><span style=" color:#000000;">)(</span><span
style=" color:#808000;">int</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#800080;">_t</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*&gt;(</span><span
style=" color:#000000;">func</span><span style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">static_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#800080;">_t</span><span
style=" color:#000000;">&gt;(&amp;</span><span style=" color:#800080;">Widget</span><span
style=" color:#000000;">::</span>countChanged<span style=" color:#000000;">))</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">                </span><span style=" color:#000000;">*</span><span
style=" color:#000000;">result</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#808000;">typedef</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">(</span><span style=" color:#800080;">Widget</span><span
style=" color:#000000;">::*</span><span style=" color:#800080;">_t</span><span style=" color:#000000;">)(</span><span
style=" color:#808000;">double</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#800080;">_t</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*&gt;(</span><span
style=" color:#000000;">func</span><span style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">static_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#800080;">_t</span><span
style=" color:#000000;">&gt;(&amp;</span><span style=" color:#800080;">Widget</span><span
style=" color:#000000;">::</span>valueChanged<span style=" color:#000000;">))</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">                </span><span style=" color:#000000;">*</span><span
style=" color:#000000;">result</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">2</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">}</span></pre>
    </div>
    我们看 qt_static_metacall() 函数里面 if - else if 的结构，可以知道它是两种用途，第一种就是上面
    qt_metacall() 调用元方法函数时，会通过 qt_static_metacall() 来实现；另一种用途是以
    QMetaObject::IndexOfMethod 方式调用，注意qt_static_metacall() 负责查询本级类的信号函数的相对序号，而
    Qt 文档中另一个函数是查询元方法绝对序号的：<br>
    <div class="code">int QMetaObject::​indexOfMethod(const char * method) const</div>
    读者要看仔细了，​indexOfMethod() ，首字母小写，这是一个普通函数。IndexOfMethod 是首字母都大写，是一个枚举常量。虽然名称比
    较像，但是它们根本没关系！<br>
    <br>
    公开函数 QMetaObject::​indexOfMethod() 和静态私有函数 Widget::qt_static_metacall()
    ，这两个函数其实没什么关系，工作原理和用途都不一样：<br>
    <ul>
      <li>公开函数 QMetaObject::​indexOfMethod()是基于字符串的比较，与函数指针没关系，用于所有元方法的绝对序号查询。</li>
      <li>Widget::qt_static_metacall() 里面 QMetaObject::IndexOfMethod 相关代码，是在新式语法
        connect 函数调用里，判断 connect 函数参数源头的函数指针是不是真的信号函数指针，基于函数指针匹配，得到信号函数的相对序号。</li>
    </ul>
    下面我们先看 qt_static_metacall() 第一种用途的代码，就是调用元方法：<br>
    <div class="code"><span style=" color:#808000;">void</span><span style=" color:#c0c0c0;">
      </span><span style=" color:#800080;">Widget</span><span style=" color:#000000;">::</span><span
        style=" color:#000000;">qt_static_metacall</span><span style=" color:#000000;">(</span><span
        style=" color:#800080;">QObject</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000000;">*</span><span style=" color:#000000;">_o</span><span
        style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
        style=" color:#800080;">Call</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000000;">_c</span><span style=" color:#000000;">,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_id</span><span
        style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000000;">**</span><span style=" color:#000000;">_a</span><span
        style=" color:#000000;">)</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">    </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_c</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
style=" color:#800080;">InvokeMetaMethod</span><span style=" color:#000000;">)</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#800080;">Widget</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#000000;">_t</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">static_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#800080;">Widget</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">*&gt;(</span><span style=" color:#000000;">_o</span><span
style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">switch</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span style=" color:#000000;">_id</span><span
style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_t</span><span style=" color:#000000;">-&gt;</span><span
style=" color:#000000;">nickNameChanged</span><span style=" color:#000000;">((*</span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">const</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">(*)&gt;(</span><span style=" color:#000000;">_a</span><span
style=" color:#000000;">[</span><span style=" color:#000080;">1</span><span style=" color:#000000;">])));</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">1</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_t</span><span style=" color:#000000;">-&gt;</span><span
style=" color:#000000;">countChanged</span><span style=" color:#000000;">((*</span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span style=" color:#000000;">(*)&gt;(</span><span
style=" color:#000000;">_a</span><span style=" color:#000000;">[</span><span style=" color:#000080;">1</span><span
style=" color:#000000;">])));</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">break</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">2</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_t</span><span style=" color:#000000;">-&gt;</span><span
style=" color:#000000;">valueChanged</span><span style=" color:#000000;">((*</span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">double</span><span
style=" color:#000000;">(*)&gt;(</span><span style=" color:#000000;">_a</span><span
style=" color:#000000;">[</span><span style=" color:#000080;">1</span><span style=" color:#000000;">])));</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">3</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_t</span><span style=" color:#000000;">-&gt;</span><span
style=" color:#000000;">setNickName</span><span style=" color:#000000;">((*</span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">const</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#800080;">QString</span><span
style=" color:#000000;">(*)&gt;(</span><span style=" color:#000000;">_a</span><span
style=" color:#000000;">[</span><span style=" color:#000080;">1</span><span style=" color:#000000;">])));</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">break</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">case</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000080;">4</span><span style=" color:#000000;">:</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_t</span><span style=" color:#000000;">-&gt;</span><span
style=" color:#000000;">setCount</span><span style=" color:#000000;">((*</span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">int</span><span style=" color:#000000;">(*)&gt;(</span><span
style=" color:#000000;">_a</span><span style=" color:#000000;">[</span><span style=" color:#000080;">1</span><span
style=" color:#000000;">])));</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">break</span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">default</span><span
style=" color:#000000;">:</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">}</span></pre>
    </div>
    函数头有四个参数：<br>
    第一个是对象指针 <span style=" color:#000000;">_o，因为静态函数没有对象的 this 指针，需要手动传递；<br>
    </span>第二个是元调用的方式，QMetaObject::InvokeMetaMethod
    是元方法调用，QMetaObject::IndexOfMethod 是元方法（信号）查询；<br>
    第三个是元方法的相对序号，调用元方法需要这个参数，而查询信号不用这个参数；<br>
    第四个是参数指针数组，调用元方法时，_a 是参数指针数组，而查询信号相对序号时，_a[0]记录相对序号数值。<br>
    <br>
    对于调用元方法的用途，qt_metacall()是这样调用静态私有函数的：<br>
    <div class="code"><span style=" color:#000000;">&nbsp;&nbsp;&nbsp;
        &nbsp;&nbsp;&nbsp; qt_static_metacall</span><span style=" color:#000000;">(</span><span
        style=" color:#808000;">this</span><span style=" color:#000000;">,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_c</span><span
        style=" color:#000000;">,</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000000;">_id</span><span style=" color:#000000;">,</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#000000;">_a</span><span
        style=" color:#000000;">);</span></div>
    手动传递了 this 指针，_c 是调用方式，_id 是元方法的相对序号，_a 是参数指针数组。<br>
    qt_static_metacall() 先把参数里的 _o 指针（原来是 this 指针）转换为原本的 Widget * 类型，现在对象指针叫 _t
    ，<br>
    然后根据相对序号 _id :<br>
    <ul>
      <li>0 号元方法是 nickNameChanged，参数指针保存在 _a[1] 里面，转成 QString *，再取出字符串变量作为信号函数参
        数。</li>
      <li>1 号元方法是 countChanged，参数指针保存在 _a[1] 里面，转成 int *，再取出整型变量作为信号函数参数。</li>
      <li>2 号元方法是 valueChanged，参数指针保存在 _a[1] 里面，转成 double *，再取出双精度浮点数变量作为信号函数参数。</li>
      <li>3 号元方法是 setNickName，参数指针保存在 _a[1] 里面，转成 QString *，再取出字符串变量作为槽函数参数。</li>
      <li>4 号元方法是 setCount，参数指针保存在 _a[1] 里面，转成 int *，再取出整型变量作为槽函数参数。</li>
    </ul>
    对于元方法调用，使用的是相对序号 _id 来找到对应函数执行。需要注意的是，我们之前信号函数不是用 emit 触发的吗？<br>
    在 qt_static_metacall() 函数里调用槽函数是正常的，因为 emit 信号函数之后，会一步步走到 qt_metacall()，再走到
    qt_static_metacall()，然后应该调用槽函数。<br>
    <br>
    为什么 qt_static_metacall() 还要调用信号函数？<br>
    我们在 4.3.3 小节，有信号关联到信号的示例，因为信号不仅可以关联调用槽函数，还可以关联调用另一个兼容的信号函数。<br>
    不仅可以从信号函数触发，一步步走到槽函数，也可以从信号函数触发，一步步走到另一个信号函数，所以 qt_static_metacall()
    函数里既调用信号函数，也调用槽函数，这是 Qt 信号和槽函数的灵活性。<br>
    <br>
    讲完元方法调用的代码，接下来是关于元方法（<span style="font-weight: bold;">信号</span>）序号查询的代码，我们把元
    方法查询的代码分成四小块来看：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&nbsp;&nbsp;&nbsp;
        }</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">else</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#808000;">if</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(</span><span
        style=" color:#000000;">_c</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span
        style=" color:#800080;">QMetaObject</span><span style=" color:#000000;">::</span><span
        style=" color:#800080;">IndexOfMethod</span><span style=" color:#000000;">)</span><span
        style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">int</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*</span><span style=" color:#000000;">result</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#808000;">int</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*&gt;(</span><span
style=" color:#000000;">_a</span><span style=" color:#000000;">[</span><span style=" color:#000080;">0</span><span
style=" color:#000000;">]);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#808000;">void</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">**</span><span style=" color:#000000;">func</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#808000;">reinterpret_cast</span><span style=" color:#000000;">&lt;</span><span
style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">**&gt;(</span><span
style=" color:#000000;">_a</span><span style=" color:#000000;">[</span><span style=" color:#000080;">1</span><span
style=" color:#000000;">]);</span></pre>
    </div>
    元方法查询其实只用到两个参数，一个是 _c ，判断是不是
    QMetaObject::IndexOfMethod，是这个查询就进入元方法序号查询的代码。另一个参数是　_a 指针数组，_a[0] 转换成 int *
    类型 result ，指向一个整型变量，保存查询到的相对序号用于反馈（是输出）；_a[1] 是输入参数指针，转成 void ** 类型的 func
    ，func 是指向函数指针的指针，是被查询的函数指针变量（是输入）。<br>
    <br>
    接下来三个小块都是大括号封装的代码，这里大括号没有定义函数、类或结构体，就是单纯的一对大括号，仅仅用于限定类型声明的作用域，类型声明超出大括号范围就失
    效，然后就可以进行下一次声明。第一段大括号封装的代码：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&nbsp;&nbsp;&nbsp;
        &nbsp;&nbsp;&nbsp; {</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#808000;">typedef</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">(</span><span style=" color:#800080;">Widget</span><span
style=" color:#000000;">::*</span><span style=" color:#800080;">_t</span><span style=" color:#000000;">)(</span><span
style=" color:#808000;">const</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#800080;">QString</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">&amp;</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#800080;">_t</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*&gt;(</span><span
style=" color:#000000;">func</span><span style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">static_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#800080;">_t</span><span
style=" color:#000000;">&gt;(&amp;</span><span style=" color:#800080;">Widget</span><span
style=" color:#000000;">::</span>nickNameChanged<span style=" color:#000000;">))</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">                </span><span style=" color:#000000;">*</span><span
style=" color:#000000;">result</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">0</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">}</span></pre>
    </div>
    这是赤裸裸的一对大括号，里面定义了一个函数指针类型 _t ，简单说 _t 就是与 &amp;Widget::nickNameChanged
    函数指针相同类型。接下来把 func 指向的函数指针转换成 _t 类型，把 &amp;Widget::nickNameChanged 也转成 _t
    类型，二者函数指针一样，说明要查询的函数指针与 nickNameChanged 信号声明一样，返回 nickNameChanged 信号函数的序号 0
    。<br>
    _t 函数指针类型声明，一旦超出大括号范围就是失效，然后我们下面就可以重新定义 _t 了。下面看第二段大括号里内容：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&nbsp;&nbsp;&nbsp;
        &nbsp;&nbsp;&nbsp; {</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#808000;">typedef</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">(</span><span style=" color:#800080;">Widget</span><span
style=" color:#000000;">::*</span><span style=" color:#800080;">_t</span><span style=" color:#000000;">)(</span><span
style=" color:#808000;">int</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#800080;">_t</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*&gt;(</span><span
style=" color:#000000;">func</span><span style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">static_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#800080;">_t</span><span
style=" color:#000000;">&gt;(&amp;</span><span style=" color:#800080;">Widget</span><span
style=" color:#000000;">::</span>countChanged<span style=" color:#000000;">))</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">                </span><span style=" color:#000000;">*</span><span
style=" color:#000000;">result</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">1</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">}</span></pre>
    </div>
    第二段是重新定义 _t 为 &amp;Widget::countChanged 同类型函数指针，然后将 func
    指向的函数指针与该信号函数指针做匹配，如 果一样就返回 countChanged 信号函数的序号 1 。<br>
    _t 类型超出大括号范围就失效，然后在第三段重新定义：<br>
    <div class="code"><span style=" color:#c0c0c0;"> </span><span style=" color:#000000;">&nbsp;&nbsp;&nbsp;
        &nbsp;&nbsp;&nbsp; {</span>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#808000;">typedef</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#808000;">void</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">(</span><span style=" color:#800080;">Widget</span><span
style=" color:#000000;">::*</span><span style=" color:#800080;">_t</span><span style=" color:#000000;">)(</span><span
style=" color:#808000;">double</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">);</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#808000;">if</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">(*</span><span style=" color:#808000;">reinterpret_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#800080;">_t</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">*&gt;(</span><span
style=" color:#000000;">func</span><span style=" color:#000000;">)</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">==</span><span style=" color:#c0c0c0;"> </span><span style=" color:#808000;">static_cast</span><span
style=" color:#000000;">&lt;</span><span style=" color:#800080;">_t</span><span
style=" color:#000000;">&gt;(&amp;</span><span style=" color:#800080;">Widget</span><span
style=" color:#000000;">::</span>valueChanged<span style=" color:#000000;">))</span><span
style=" color:#c0c0c0;"> </span><span style=" color:#000000;">{</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">                </span><span style=" color:#000000;">*</span><span
style=" color:#000000;">result</span><span style=" color:#c0c0c0;"> </span><span
style=" color:#000000;">=</span><span style=" color:#c0c0c0;"> </span><span style=" color:#000080;">2</span><span
style=" color:#000000;">;</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">            </span><span style=" color:#000000;">}</span></pre>
      <pre style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span
style=" color:#c0c0c0;">        </span><span style=" color:#000000;">}</span></pre>
    </div>
    第三段的 _t 是 &amp;Widget::valueChanged 同类型函数指针，然后把 func
    指向的函数指针与该信号函数指针做匹配，如果一样就返回 valueChanged 信号函数的序号 2。<br>
    <br>
    qt_static_metacall() 里面关于元方法相对序号查询的代码，实际仅与信号函数有关，没有槽函数什么事。这与上面代码的用途有关，在新式语法的
    connect 函数里，比如：<br>
    <div class="code">connect(ui-&gt;pushButton, &amp;QPushButton::clicked,
      this, &amp;Widget::FoodIsComing);</div>
    这句函数调用里面，怎么知道 clicked 一定是信号，而不是其他成员函数呢？所以新式语法里面必须先检查
    &amp;QPushButton::clicked 是不是信号函数指针，然后再做关联。<br>
    <br>
    新式语法的 connect 函数调用，源头的函数指针必须是信号函数指针，因此需要通过源头的 qt_static_metacall()
    来查询源头的函数指针是不是信号函数指针，根据反馈的 _a[0] 指向的整型变量数值来确认。<br>
    新式语法对于接收端的函数指针其实没什么要求，可以是信号、槽、普通成员函数，甚至是 Lambda
    函数，所以接收端函数不需要判断是不是槽。之前没说新式语法接收端的函数指针可以是普通成员函数、Lambda 函数，是不想把问题搞复杂。<br>
    <br>
    到这里，前四小节的内容就讲完了，moc_widget.cpp 里的代码也全部讲完了。moc_showchanges.cpp 里的代码与
    moc_widget.cpp 类似，但简单许多，所以不讲 moc_showchanges.cpp 里的代码了。<br>
    <br>
    经过前面四个小节学习，我们知道信号是函数，里面调用了 QMetaObject::activate() 函数；<br>
    而对于接收端的槽函数或信号，是先调用虚函数 qt_metacall()，再通过私有静态函数 qt_static_metacall() 调用元方法。<br>
    源头是有的，接收端也是有的，中间少了个桥，这个桥就是 Qt 元对象系统的技术内幕，我们需要阅读 Qt 核心源码才能知道。后面三个小节就是把从源头到接收端
    的桥解析一下。<br>
    <br>
    <div class="os2"> 4.6.5 MOS原理之五：connect </div>
    <br>
    connect <br>
    <br>
    <div class="os2"> 4.6.6 MOS原理之六：自动关联 </div>
    <br>
    void QMetaObject::​connectSlotsByName(QObject * object) <br>
    <br>
    <div class="os2"> 4.6.7 MOS原理之七：从信号到槽 </div>
    <br>
    activate --&gt; qt_metacall <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td style="width: 40%;">
            <div style="text-align: center;"><a href="ch04-05.htm"><img class="pic"
                  style="width: 32px; height: 32px;" alt="prev" src="images/pics/prev.png"></a></div>
          </td>
          <td style="width: 20%;">
            <div style="text-align: center;"><a href="contents.htm"><img class="pic"
                  style="width: 32px; height: 32px;" alt="contents" src="images/pics/contents.png"></a></div>
          </td>
          <td style="width: 40%;">
            <div style="text-align: center;"><a href="ch05-00.htm"><img class="pic"
                  style="width: 32px; height: 32px;" alt="next" src="images/pics/next.png"></a></div>
          </td>
        </tr>
      </tbody>
    </table>
  </body>
</html>
